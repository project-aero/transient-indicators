(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    268324,       5106]
NotebookOptionsPosition[    266323,       5037]
NotebookOutlinePosition[    266692,       5053]
CellTagsIndexPosition[    266649,       5050]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Figure 1 - transient period", "Subsection",
 CellChangeTimes->{{3.758993346885236*^9, 3.758993352423422*^9}, {
  3.7882763131884146`*^9, 3.788276316661851*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.02"}], ";", " ", 
  RowBox[{"R0", "=", "17"}], ";"}]], "Input",
 CellChangeTimes->{{3.739186143788307*^9, 3.739186151841866*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"JacEE", "[", "p_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Mu]"}], " ", "R0", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}]}], ",", " ", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"365", "/", "22"}], "+", "\[Mu]"}], ")"}]}]}], "  ", "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"R0", 
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}], ",", " ", 
      "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7161077816443267`*^9, 3.716107863264187*^9}, {
  3.7161079335882397`*^9, 3.7161079369218645`*^9}, {3.7384322421693277`*^9, 
  3.738432280725338*^9}, {3.7385890072279425`*^9, 3.7385890253881063`*^9}, {
  3.7385893899804378`*^9, 3.7385893982073627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"JacEEM", "[", "p_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Mu]"}], " ", "R0", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}]}], ",", " ", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"365", "/", "13"}], "+", "\[Mu]"}], ")"}]}]}], "  ", "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"R0", 
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}], ",", " ", 
      "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7161077816443267`*^9, 3.716107863264187*^9}, {
  3.7161079335882397`*^9, 3.7161079369218645`*^9}, {3.7384322421693277`*^9, 
  3.738432280725338*^9}, {3.7385890072279425`*^9, 3.7385890253881063`*^9}, {
  3.7385892500076323`*^9, 3.7385892528075533`*^9}, {3.738589382900345*^9, 
  3.738589400269717*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"JDFEP", "[", "p_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"365", "/", "22"}], "+", "\[Mu]"}], ")"}]}], " ", "R0", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}]}]}], " ", "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"365", "/", "22"}], "+", "\[Mu]"}], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"R0", 
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.738589514224806*^9, 3.738589531697727*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"JDFEM", "[", "p_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Mu]"}], ",", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"365", "/", "13"}], "+", "\[Mu]"}], ")"}]}], " ", "R0", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}]}]}], " ", "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"365", "/", "13"}], "+", "\[Mu]"}], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"R0", 
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7385895393868937`*^9, 3.738589546146832*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"2", "*", 
          RowBox[{"\[Pi]", "/", 
           RowBox[{"(", 
            RowBox[{"Abs", "[", 
             RowBox[{"Im", "[", 
              RowBox[{
               RowBox[{"Eigenvalues", "[", 
                RowBox[{"JacEEM", "[", "p", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ")"}]}]}]}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "0", ",", " ", 
         RowBox[{"1", "-", 
          RowBox[{"1", "/", "R0"}]}], ",", " ", "0.01"}], "}"}]}], "]"}], ",",
      " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"2", "*", 
          RowBox[{"\[Pi]", "/", 
           RowBox[{"(", 
            RowBox[{"Abs", "[", 
             RowBox[{"Im", "[", 
              RowBox[{
               RowBox[{"Eigenvalues", "[", 
                RowBox[{"JacEE", "[", "p", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ")"}]}]}]}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "0", ",", " ", 
         RowBox[{"1", "-", 
          RowBox[{"1", "/", "R0"}]}], ",", " ", "0.01"}], "}"}]}], "]"}]}], 
    "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Measles\>\"", ",", " ", "\"\<Pertussis\>\""}], "}"}], ",",
       " ", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", " ", "0.75"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<p\>\"", ",", " ", "\"\<Transient Period (yrs)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7385890361402783`*^9, 3.738589222559516*^9}, {
  3.7385893221772966`*^9, 3.738589329306862*^9}, {3.7385894317994785`*^9, 
  3.7385894447771235`*^9}, {3.739186171191166*^9, 3.7391861810884514`*^9}, {
  3.7391862165052247`*^9, 3.739186232103004*^9}, {3.7401560757145643`*^9, 
  3.740156137387557*^9}, {3.7589923656782894`*^9, 3.7589924382302685`*^9}, {
  3.7637456835224895`*^9, 3.763745720655396*^9}, {3.7676370597831144`*^9, 
  3.767637063193816*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], Thickness[Large], LineBox[CompressedData["
1:eJw1kgtQlHUUxffFArs8VliUXAQJK0BBGxgfEJ5/MAUkj4EhG2VRAUkdpFRM
DQyk0CZd0wBxUIEMRkSLQaLlKYMgCqKOxlMEYUFgeeoq2MIY5m6XO/PNN9/j
f+8553fto74OjeFxOJytby/dfb5a132Vv+0OhyVKi3xVCalIm9Iow1Tzzxn4
R74w6LKWw8ptj46FlOfg3KSF4RYJl77nY7GHOOuQI5edy9JVIfwtI9pnGZf+
L4Kfgl80vInLxkN0b65hzl/i4h0/f74UgX0fHTE9yWWijrw9XqIyZIkypwMK
5vtVoLbGe45fx2VO8lN1047V+OTTXatW98z3r0Fhtbv/sJbL8t+e7sirhclP
/7rKrHg07wZ6C86+bPuQx9z0VQ/rnqZ2WTCP5t/EEzeNn2Y3j9VPO76d0ICU
1NaJzSd4pOc21i76PTfiCo+F6gc2YkN/5L65Jh7pa8LxjeZl3qM8pkrQNbwD
c9eaNyvFfNJ7FyHe+xzuruCzvTp5e+7he8kP3kuC+aT/PmL9Apqd9vHZ/zQe
wO5nr2TtGT75eYDsxNBDpyv5zE8/4CHqNK9dZ3r55O8hro8qjngIBUw3TX7q
b4T5v6uUuwjIbwsOZqxW7PxcwPR2Olrwyv2+x44kAflvhf3VqKSoywJmp5Nj
2waXsKyL21sElEcbGm51/3jojYDt+FJX7TibqSkvXGFA+XSgIum3OEG4AdN1
kxZ1YPuFvOwzxw0or050ZT0wi60yYK907aY7kXJ0MiZ9woDyewRZsd06W3sh
W69v2IVne9Yvs9kopDy7EPJxeG+OQsj08o4+RsP+vC8qbgop326cdOA0J88J
2b27uupG53TjkKGHIeXdg5nSqZGdBw2ZlV7gE9wP9G6uUhpS/k+Qe1sdLdMa
Mn07eS/W+uzPzfc0Ih59iHNOu3YgxYj89OGPwOLQP5uMiE8fEjmJgmSpMfnr
Q6PqwFZulDHxUqGn3SU2psSY/KqgDiridRmIiJ8KfwXH+6bJReS/H4GyNe/d
UoqIZz+W5ilHSqRiyqMfu9dIps4fEBPfAciq3Y80d4spnwFUVw2kp/uaEO8B
dPk+swwuM6G8nqLB2V4UvcKU+D/FBfHy91mBKeX3FP0upce2O5rRPgxib4HJ
44hiM8pzELVOmS+aYU77MQi59nlrdIc55TuE8IC5uhlPCe3LELSa+hC3XySU
9xCGXfNMhsYktD/DyNk0m10UsIDyH4aSlyL3KV1A+zSMwFUrtd86WBAPNSo/
E94MOm9BPNSIj9K6TtpYEg81Eh5Fet0otCQeahTW5Lon+UiJxwh2LbkAjEuJ
xwguMU3txUtWxGMEnuGpihffLCQeo9j2uqklbssidlrPYxShsYOmOTHWxGMU
0sMbwibS3iEeYxioqw1WPF9MPMZwYvnVHRqFDfEYA//6YdnB72yJxzgiNzs6
/Lp3KfEYR3y90ipj1p54jEPtq450Fi8jHhPgLUlrsjb+gHhMoPKGpbPy5XLi
MYGp3tAFo15uxGMSxSWTY1caAtl/0gi0uA==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], Dashing[{Small, Small}],
        LineBox[CompressedData["
1:eJw1kglMk3cYxkG7XlAotCCKoyBy6CJTJluHx/tngDIDC0dxsHUBHEdcWIBt
iKtDgsKMbAFhbETiIBxDDlckoJShIKvIOMopQqEU2lLO1qEOSdCM0e7lTb58
+Y7/+z7P83udziSFxm0zMTGJ2rwM9626VOe3vUDxBrnAFZ9UibIg011dHre+
9VwIR7a7pd2xoxKJQ/ZyiKQErh2Nn8t6j4rfKyG5vub82GkqKb5uqBo43Rwr
v31u638xtM76yLlFVKILMbxpgHelrGSaZOt8E3iqHrT9KKcS5lhF8jFmM1wS
1VnVvNrq1wKJn3Wqox1oZJ8w789V93vgN7VXIfGhYf82EM+XTtyJo5HKzdNj
FQ/Atbh4RZhDw3kdQKi0s431NPKOsaRw463inrZRGs5/CPX53pNZr2lEuuq+
OaETOiJ+rzDbS0c9XRDOufJ1ZCCdhBoH/gV6Eq/9JpWO+rohRZ6uiS2lE5XI
0LAHykzTbh3soaPePlDfaxifXqWTFIO8ZBnwffVRoj0M1N8P47kxpfRgBvmf
xiC43xdE/3SRgX4GoZbBn3YWM0iAccAQhJ2PHJEqGehvCJ6089PS2UximCbM
G4aN+rz8T32Z6HcEWg47ZpxNYxKjnbERSD4iPNZ4i4n+H4PloX9T/TVMwjPI
cRgFys91PxywN8M8RmEloO3mtwIzkhBvqCfA1gi6+XlmmM8YZCT1j4p6zYih
G1c8Br8MTNQGM8wxr3FIiPnIsy/AnLw0tFsdh2ydPs0kxxzzk8MzXlKHqcyc
HDc2nIDghOfVWisW5jkBgc1+3tIIFjHKy56EjERfTmMZC/NVgJO0+8qAjkVk
fYZSQNO+0u7D3haY9xQseqxwTXMsiI1RoBJSbzxTCRQWmL8SuhwTdocdsiTG
dsJp+CBfG+N01RJ5zIBfuOzkgsYS/cxAwq/Wo4uObOQzAxSvyEtXQ9jobwZk
Tf8s6y6zkZcKzD8ZZB2UsNGvCvq9tdEpT9nITwVl0S9dhl2t0L8aVguCWs/F
WCFPNejPJG98X2KFeaiBo3hb6qG0Qr4acEtfDypxtMZ8NCAP3lhjxlsjbw1U
87KU9WJrzGsWzDlTzf3r1sh/FvhVvbLbpziY3yx80d7pWl3CwX3QQm+RdoG9
xsE8tSAZ8qKECbi4H1ro9H/hNXuXi/nOge9MwYVTPBvclznQP4/i8HJtMO85
8J+397Sm2OL+zEONyKf870xbzH8eJquYhZX0HbhP8xAQmLtx4voO5LEAlh9T
HHledshjAcK7vnrUOGWHPBYgw/5E4UThTuSxAPntwjqZcBfyWISwL0OdP+Tb
I49F6Ig72t24fzfyWISR1ss1Efw3kccSCB4pvP+IdyDXjDyWYOdIr5x1n4c8
lsA76GLqd+WOyGMZ8l441CqznZDHMkwOV5nZFuxBHsuwVjM3QB11Rh46ePVw
VwPEuiAPHWwL64xJ+dwNeeigaOj1igNnP/LQQ1mkhfTm2gHkoQd7Sqb4rocn
8tDD44bjDYmM95HHU/itxSUwPDGM/Ac2zLpG
        "]]}}, {}}, InsetBox[
     TemplateBox[{"\"Measles\"","\"Pertussis\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.25, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"p\"", TraditionalForm], 
     FormBox["\"Transient Period (yrs)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.9400000000000001}, {0, 77.69270614322757}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw1kgtQlHUUxffFArs8VliUXAQJK0BBGxgfEJ5/MAUkj4EhG2VRAUkdpFRM
DQyk0CZd0wBxUIEMRkSLQaLlKYMgCqKOxlMEYUFgeeoq2MIY5m6XO/PNN9/j
f+8553fto74OjeFxOJytby/dfb5a132Vv+0OhyVKi3xVCalIm9Iow1Tzzxn4
R74w6LKWw8ptj46FlOfg3KSF4RYJl77nY7GHOOuQI5edy9JVIfwtI9pnGZf+
L4Kfgl80vInLxkN0b65hzl/i4h0/f74UgX0fHTE9yWWijrw9XqIyZIkypwMK
5vtVoLbGe45fx2VO8lN1047V+OTTXatW98z3r0Fhtbv/sJbL8t+e7sirhclP
/7rKrHg07wZ6C86+bPuQx9z0VQ/rnqZ2WTCP5t/EEzeNn2Y3j9VPO76d0ICU
1NaJzSd4pOc21i76PTfiCo+F6gc2YkN/5L65Jh7pa8LxjeZl3qM8pkrQNbwD
c9eaNyvFfNJ7FyHe+xzuruCzvTp5e+7he8kP3kuC+aT/PmL9Apqd9vHZ/zQe
wO5nr2TtGT75eYDsxNBDpyv5zE8/4CHqNK9dZ3r55O8hro8qjngIBUw3TX7q
b4T5v6uUuwjIbwsOZqxW7PxcwPR2Olrwyv2+x44kAflvhf3VqKSoywJmp5Nj
2waXsKyL21sElEcbGm51/3jojYDt+FJX7TibqSkvXGFA+XSgIum3OEG4AdN1
kxZ1YPuFvOwzxw0or050ZT0wi60yYK907aY7kXJ0MiZ9woDyewRZsd06W3sh
W69v2IVne9Yvs9kopDy7EPJxeG+OQsj08o4+RsP+vC8qbgop326cdOA0J88J
2b27uupG53TjkKGHIeXdg5nSqZGdBw2ZlV7gE9wP9G6uUhpS/k+Qe1sdLdMa
Mn07eS/W+uzPzfc0Ih59iHNOu3YgxYj89OGPwOLQP5uMiE8fEjmJgmSpMfnr
Q6PqwFZulDHxUqGn3SU2psSY/KqgDiridRmIiJ8KfwXH+6bJReS/H4GyNe/d
UoqIZz+W5ilHSqRiyqMfu9dIps4fEBPfAciq3Y80d4spnwFUVw2kp/uaEO8B
dPk+swwuM6G8nqLB2V4UvcKU+D/FBfHy91mBKeX3FP0upce2O5rRPgxib4HJ
44hiM8pzELVOmS+aYU77MQi59nlrdIc55TuE8IC5uhlPCe3LELSa+hC3XySU
9xCGXfNMhsYktD/DyNk0m10UsIDyH4aSlyL3KV1A+zSMwFUrtd86WBAPNSo/
E94MOm9BPNSIj9K6TtpYEg81Eh5Fet0otCQeahTW5Lon+UiJxwh2LbkAjEuJ
xwguMU3txUtWxGMEnuGpihffLCQeo9j2uqklbssidlrPYxShsYOmOTHWxGMU
0sMbwibS3iEeYxioqw1WPF9MPMZwYvnVHRqFDfEYA//6YdnB72yJxzgiNzs6
/Lp3KfEYR3y90ipj1p54jEPtq450Fi8jHhPgLUlrsjb+gHhMoPKGpbPy5XLi
MYGp3tAFo15uxGMSxSWTY1caAtl/0gi0uA==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJw1kglMk3cYxkG7XlAotCCKoyBy6CJTJluHx/tngDIDC0dxsHUBHEdcWIBt
iKtDgsKMbAFhbETiIBxDDlckoJShIKvIOMopQqEU2lLO1qEOSdCM0e7lTb58
+Y7/+z7P83udziSFxm0zMTGJ2rwM9626VOe3vUDxBrnAFZ9UibIg011dHre+
9VwIR7a7pd2xoxKJQ/ZyiKQErh2Nn8t6j4rfKyG5vub82GkqKb5uqBo43Rwr
v31u638xtM76yLlFVKILMbxpgHelrGSaZOt8E3iqHrT9KKcS5lhF8jFmM1wS
1VnVvNrq1wKJn3Wqox1oZJ8w789V93vgN7VXIfGhYf82EM+XTtyJo5HKzdNj
FQ/Atbh4RZhDw3kdQKi0s431NPKOsaRw463inrZRGs5/CPX53pNZr2lEuuq+
OaETOiJ+rzDbS0c9XRDOufJ1ZCCdhBoH/gV6Eq/9JpWO+rohRZ6uiS2lE5XI
0LAHykzTbh3soaPePlDfaxifXqWTFIO8ZBnwffVRoj0M1N8P47kxpfRgBvmf
xiC43xdE/3SRgX4GoZbBn3YWM0iAccAQhJ2PHJEqGehvCJ6089PS2UximCbM
G4aN+rz8T32Z6HcEWg47ZpxNYxKjnbERSD4iPNZ4i4n+H4PloX9T/TVMwjPI
cRgFys91PxywN8M8RmEloO3mtwIzkhBvqCfA1gi6+XlmmM8YZCT1j4p6zYih
G1c8Br8MTNQGM8wxr3FIiPnIsy/AnLw0tFsdh2ydPs0kxxzzk8MzXlKHqcyc
HDc2nIDghOfVWisW5jkBgc1+3tIIFjHKy56EjERfTmMZC/NVgJO0+8qAjkVk
fYZSQNO+0u7D3haY9xQseqxwTXMsiI1RoBJSbzxTCRQWmL8SuhwTdocdsiTG
dsJp+CBfG+N01RJ5zIBfuOzkgsYS/cxAwq/Wo4uObOQzAxSvyEtXQ9jobwZk
Tf8s6y6zkZcKzD8ZZB2UsNGvCvq9tdEpT9nITwVl0S9dhl2t0L8aVguCWs/F
WCFPNejPJG98X2KFeaiBo3hb6qG0Qr4acEtfDypxtMZ8NCAP3lhjxlsjbw1U
87KU9WJrzGsWzDlTzf3r1sh/FvhVvbLbpziY3yx80d7pWl3CwX3QQm+RdoG9
xsE8tSAZ8qKECbi4H1ro9H/hNXuXi/nOge9MwYVTPBvclznQP4/i8HJtMO85
8J+397Sm2OL+zEONyKf870xbzH8eJquYhZX0HbhP8xAQmLtx4voO5LEAlh9T
HHledshjAcK7vnrUOGWHPBYgw/5E4UThTuSxAPntwjqZcBfyWISwL0OdP+Tb
I49F6Ig72t24fzfyWISR1ss1Efw3kccSCB4pvP+IdyDXjDyWYOdIr5x1n4c8
lsA76GLqd+WOyGMZ8l441CqznZDHMkwOV5nZFuxBHsuwVjM3QB11Rh46ePVw
VwPEuiAPHWwL64xJ+dwNeeigaOj1igNnP/LQQ1mkhfTm2gHkoQd7Sqb4rocn
8tDD44bjDYmM95HHU/itxSUwPDGM/Ac2zLpG
          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 0.9400000000000001}, {0, 77.69270614322757}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"p", "Transient Period (yrs)"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 0.9400000000000001}, {0, 77.69270614322757}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]]}, {"Measles", "Pertussis"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> "Column"]], {
     0.25, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7589933617893724`*^9, {3.763745704157318*^9, 3.763745728919197*^9}, 
   3.7676370787562833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Transientperiod.pdf\>\"", ",", " ", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.7401561795846925`*^9, 3.7401561927723784`*^9}}],

Cell[BoxData["\<\"Transientperiod.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7401561943172417`*^9, 3.758992495236768*^9, {3.7637457064630365`*^9, 
   3.7637457296053133`*^9}, 3.767637080598504*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure 2: amplification envelope ", "Subsection",
 CellChangeTimes->{{3.7589865332959175`*^9, 3.7589865433601403`*^9}, {
  3.758993220724671*^9, 3.7589932222585716`*^9}, {3.7882763733699293`*^9, 
  3.7882763806717377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"R0", "=", "17"}], ";", " ", 
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"365", "/", "22"}]}], ";", " ", 
  RowBox[{"\[Mu]", "=", "0.02"}], ";", " ", 
  RowBox[{"p", "=", 
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "R0"}], "+", "0.01"}]}], ";", 
  RowBox[{"JDFEp", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], ",", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}], " ", "R0", 
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}]}]}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}], 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}]}], "}"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7385137778183327`*^9, 3.738513798814764*^9}, {
  3.7385138887150965`*^9, 3.7385139842332306`*^9}, {3.7385143078983655`*^9, 
  3.7385143088554697`*^9}, {3.738514540870839*^9, 3.7385145667078867`*^9}, {
  3.7385145978538313`*^9, 3.7385145982457857`*^9}, {3.7385147534522066`*^9, 
  3.738514753650547*^9}, {3.7385148886763935`*^9, 3.738514902537162*^9}, {
  3.7385176002967224`*^9, 3.738517602768875*^9}, {3.7385176923518734`*^9, 
  3.738517726593809*^9}, {3.7385177666085553`*^9, 3.7385177678411007`*^9}, {
  3.738517802349718*^9, 3.7385178028506126`*^9}, {3.7385179363434973`*^9, 
  3.7385179366787047`*^9}, {3.7385180302838335`*^9, 3.7385180867521324`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.02`"}], ",", 
     RowBox[{"-", "13.787054545454547`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2.823854545454544`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.738517717478956*^9, 3.7385177280274982`*^9}, 
   3.738517768575444*^9, 3.7385178037645855`*^9, 3.738517937087677*^9, 
   3.7385180311645217`*^9, {3.738518062844217*^9, 3.738518087345565*^9}, 
   3.7637457904815326`*^9, {3.76763890849794*^9, 3.7676389230384674`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopePDFE", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"R0", "=", "17"}], ";", " ", 
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "22"}]}], ";", " ", 
     RowBox[{"\[Mu]", "=", "0.02"}], ";", " ", 
     RowBox[{"JDFEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Mu]"}], ",", " ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}]}], " ", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}]}], 
         "}"}]}], "}"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"Max", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SingularValueList", "[", 
           RowBox[{
            RowBox[{"MatrixExp", "[", 
             RowBox[{"JDFEp", " ", "t"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
          "}"}]}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
   3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
   3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
   3.7385163063071866`*^9, 3.7385163176801114`*^9}, {3.738517380199621*^9, 
   3.7385174034521475`*^9}, {3.738517443735221*^9, 3.7385174441768813`*^9}, 
   3.7385178702540445`*^9, {3.758986566449729*^9, 3.7589865707069902`*^9}, {
   3.758989149980095*^9, 3.7589891522443275`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopeMDFE", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "13"}]}], ";", 
     RowBox[{"R0", "=", "17"}], ";", "  ", 
     RowBox[{"\[Mu]", "=", "0.02"}], ";", " ", 
     RowBox[{"JDFEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Mu]"}], ",", " ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}]}], " ", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}]}], 
         "}"}]}], "}"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"Max", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SingularValueList", "[", 
           RowBox[{
            RowBox[{"MatrixExp", "[", 
             RowBox[{"JDFEp", " ", "t"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
          "}"}]}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
   3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
   3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
   3.738516346080902*^9, 3.7385163550434494`*^9}, {3.738517388097026*^9, 
   3.738517448601423*^9}, 3.738517872763091*^9, {3.758986574055691*^9, 
   3.758986577846007*^9}, {3.758989154385624*^9, 3.7589891554030905`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopePtab", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "22"}]}], ";", 
     RowBox[{"JEEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}]}], "  ", "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Mu]", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}], ",", 
          " ", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SingularValueList", "[", 
          RowBox[{
           RowBox[{"MatrixExp", "[", 
            RowBox[{"JEEp", " ", "t"}], "]"}], ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
         "}"}]}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
  3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
  3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
  3.7385163063071866`*^9, 3.7385163176801114`*^9}, {3.7589891575231533`*^9, 
  3.758989158476446*^9}, {3.758991240669229*^9, 3.758991266669728*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopeP", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "22"}]}], ";", 
     RowBox[{"JEEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}]}], "  ", "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Mu]", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}], ",", 
          " ", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"Max", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SingularValueList", "[", 
           RowBox[{
            RowBox[{"MatrixExp", "[", 
             RowBox[{"JEEp", " ", "t"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
          "}"}]}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
  3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
  3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
  3.7385163063071866`*^9, 3.7385163176801114`*^9}, {3.7589891575231533`*^9, 
  3.758989158476446*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopeM", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "13"}]}], ";", 
     RowBox[{"JEEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}]}], "  ", "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Mu]", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}], ",", 
          " ", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"Max", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SingularValueList", "[", 
           RowBox[{
            RowBox[{"MatrixExp", "[", 
             RowBox[{"JEEp", " ", "t"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
          "}"}]}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
  3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
  3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
  3.738516346080902*^9, 3.7385163550434494`*^9}, {3.7589891605969944`*^9, 
  3.7589891616634636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopePDFETime", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "22"}]}], ";", 
     RowBox[{"JDFEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Mu]"}], ",", " ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}]}], " ", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}]}], 
         "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"MatrixExp", "[", 
          RowBox[{"JDFEp", "*", "t"}], "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxtime", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"tab", ",", " ", 
          RowBox[{"Max", "[", "tab", "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "10", ",", "0.01"}], "]"}], "[", 
       RowBox[{"[", "maxtime", "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
   3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
   3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
   3.7385163063071866`*^9, 3.7385163176801114`*^9}, {3.739635337839572*^9, 
   3.739635338364167*^9}, {3.7396353716850166`*^9, 3.739635402245284*^9}, {
   3.7396354437941165`*^9, 3.7396354655010147`*^9}, {3.7396354955167055`*^9, 
   3.7396355018348026`*^9}, {3.7396355665636206`*^9, 3.739635570339515*^9}, {
   3.7396364996289735`*^9, 3.7396365318188524`*^9}, {3.7396365961387644`*^9, 
   3.739636596887763*^9}, 3.7589866205178633`*^9, {3.7589890091268387`*^9, 
   3.758989014268521*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopeMDFETime", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "13"}]}], ";", 
     RowBox[{"JDFEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Mu]"}], ",", " ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}]}], " ", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}], 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}]}], 
         "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"MatrixExp", "[", 
          RowBox[{"JDFEp", "*", "t"}], "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxtime", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"tab", ",", " ", 
          RowBox[{"Max", "[", "tab", "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "10", ",", "0.01"}], "]"}], "[", 
       RowBox[{"[", "maxtime", "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
   3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
   3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
   3.7385163063071866`*^9, 3.7385163176801114`*^9}, {3.739635337839572*^9, 
   3.739635338364167*^9}, {3.7396353716850166`*^9, 3.739635402245284*^9}, {
   3.7396354437941165`*^9, 3.7396354655010147`*^9}, {3.7396354955167055`*^9, 
   3.7396355018348026`*^9}, {3.7396355665636206`*^9, 3.739635570339515*^9}, {
   3.7396364996289735`*^9, 3.7396365512648225`*^9}, {3.739636581374304*^9, 
   3.7396365935746255`*^9}, 3.758986627047864*^9, {3.7589889983090897`*^9, 
   3.7589890024224043`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopePTime", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "22"}]}], ";", 
     RowBox[{"JEEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}]}], "  ", "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Mu]", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}], ",", 
          " ", "0"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"MatrixExp", "[", 
          RowBox[{"JEEp", "*", "t"}], "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxtime", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"tab", ",", " ", 
          RowBox[{"Max", "[", "tab", "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "10", ",", "0.01"}], "]"}], "[", 
       RowBox[{"[", "maxtime", "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
   3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
   3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
   3.7385163063071866`*^9, 3.7385163176801114`*^9}, {3.739635337839572*^9, 
   3.739635338364167*^9}, {3.7396353716850166`*^9, 3.739635402245284*^9}, {
   3.7396354437941165`*^9, 3.7396354655010147`*^9}, {3.7396354955167055`*^9, 
   3.7396355018348026`*^9}, {3.7396355665636206`*^9, 3.739635570339515*^9}, {
   3.7396364996289735`*^9, 3.7396365318188524`*^9}, {3.7396365961387644`*^9, 
   3.739636596887763*^9}, 3.7589866205178633`*^9, {3.758987227707646*^9, 
   3.7589872282332597`*^9}, 3.758988104486247*^9, {3.758988180762806*^9, 
   3.758988186418494*^9}, {3.7589889316281013`*^9, 3.758988943426967*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AmpEnvelopeMTime", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Gamma]", "=", 
      RowBox[{"365", "/", "13"}]}], ";", 
     RowBox[{"JEEp", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Mu]"}], " ", "R0", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "\[Mu]"}], ")"}]}]}], "  ", "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Mu]", 
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"R0", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}]}], "-", "1"}], ")"}]}], ",", 
          " ", "0"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"MatrixExp", "[", 
          RowBox[{"JEEp", "*", "t"}], "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "10", ",", " ", "0.01"}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxtime", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"tab", ",", " ", 
          RowBox[{"Max", "[", "tab", "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "10", ",", "0.01"}], "]"}], "[", 
       RowBox[{"[", "maxtime", "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851591928405*^9, 3.7385159240118513`*^9}, {
   3.7385159729066563`*^9, 3.73851612176471*^9}, {3.738516155685477*^9, 
   3.738516161515361*^9}, {3.738516200709735*^9, 3.738516220068104*^9}, {
   3.7385163063071866`*^9, 3.7385163176801114`*^9}, {3.739635337839572*^9, 
   3.739635338364167*^9}, {3.7396353716850166`*^9, 3.739635402245284*^9}, {
   3.7396354437941165`*^9, 3.7396354655010147`*^9}, {3.7396354955167055`*^9, 
   3.7396355018348026`*^9}, {3.7396355665636206`*^9, 3.739635570339515*^9}, {
   3.7396364996289735`*^9, 3.7396365512648225`*^9}, {3.739636581374304*^9, 
   3.7396365935746255`*^9}, 3.758986627047864*^9, {3.7589872305735474`*^9, 
   3.7589872311162567`*^9}, 3.758988108010133*^9, {3.758988178075427*^9, 
   3.758988189282915*^9}, {3.7589890278923626`*^9, 3.758989032472739*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AmpEnvelopeMDFETime", "[", "p", "]"}], ",", 
        RowBox[{"AmpEnvelopePDFETime", "[", "p", "]"}]}], "}"}], ",", "  ", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"1", "-", 
         RowBox[{"1", "/", "R0"}]}], ",", " ", "0.999"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Measles\>\"", ",", " ", "\"\<Pertussis\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0.25", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<p\>\"", ",", " ", "\"\<Max Time (yrs)\>\""}], "}"}]}]}], 
     "]"}], ",", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AmpEnvelopeMTime", "[", "p", "]"}], ",", " ", 
        RowBox[{"AmpEnvelopePTime", "[", "p", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", 
        RowBox[{"1", "-", 
         RowBox[{"1", "/", "R0"}]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", "R0"}]}], ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", "R0"}]}], ",", " ", "4"}], "}"}]}], "}"}], "]"}],
      "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851611071463*^9, 3.738516111647391*^9}, {
   3.738516230375119*^9, 3.7385162487739143`*^9}, {3.7385163643674774`*^9, 
   3.73851639826348*^9}, {3.738516477306359*^9, 3.7385165077881327`*^9}, {
   3.738517426223092*^9, 3.7385174545259914`*^9}, {3.738517891585456*^9, 
   3.7385178947594004`*^9}, {3.739636366590318*^9, 3.7396363754405932`*^9}, {
   3.73963640973487*^9, 3.739636468045825*^9}, {3.739636601798619*^9, 
   3.7396366210371494`*^9}, {3.739637056638734*^9, 3.739637064663228*^9}, {
   3.739637141045987*^9, 3.7396371637362804`*^9}, {3.7396372521192164`*^9, 
   3.739637310601715*^9}, {3.739637390262581*^9, 3.7396374316119847`*^9}, {
   3.7396375488193645`*^9, 3.739637550134841*^9}, {3.739637696018171*^9, 
   3.7396377450160775`*^9}, {3.739637842490285*^9, 3.739637845599964*^9}, {
   3.7396384898050084`*^9, 3.7396385214982414`*^9}, {3.7396385858560123`*^9, 
   3.739638596634173*^9}, {3.758988045559683*^9, 3.758988057770477*^9}, 
   3.7589882642099533`*^9, {3.758988435624132*^9, 3.7589884806893663`*^9}, {
   3.7589886233546925`*^9, 3.758988624999446*^9}, {3.7589888071815767`*^9, 
   3.7589888078653593`*^9}, {3.758988889373133*^9, 3.758988889880913*^9}, {
   3.7637457566566043`*^9, 3.76374577732232*^9}, {3.767638805193515*^9, 
   3.7676388071524534`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1:eJxN2Hc8V9//AHCbaMhqoURSKSUqGeeSvbI1JVtGRmaSEIUQUiEkIz4SkaSB
yowKFaFEkigr2eP3rr7nd173H4/n4/F2xzmvda+QxUkDawY6OjpLRjq6P395
5CIaT0oNIp48tS5fHnaqSIffnkV6EJ0f0C8RPL+IGneRu7Zz1yCKfvZb7EgU
G2XmsU7hIM22Nn8ONqrKh6nHn2YD2q8H9Nmobf59F9NpVmBvueUiz0bFB9ZL
1NHM+/f8bNR8SP67IZrp/h5slE143Gne3YPoz6/ZW1ipV1HeQrI0P/9zuWes
1O64I9XmNP/99zxWKvUa5RSyG98fK8V2Q4Q7l2ZX+T8XZKVcbrI9bKSZ9s+0
M7BSrRk/zCZo3vn3YKWonDdMAnsG0dq/J2ClbucV5SjR/Pd22VkpzsJrenY0
j/+5/G8WyvuB3/glmhvq/xws1OdH5kmFNP993BIWSr1cWekDzel/bv8WC5X/
Qqxvnua/l49ioVbVLo4UkcHrxUIFNgzv1JTB68VC9Te+/XBSBq8XC1XalrTh
kQxeLxZqZu6xUd9e/DzMVIR5jPwS2UGk/mc51Jgp/ue2opKy+PmYKYULXJOn
ZfHzMFMBXHaJy+Tw/TJRLBu5u3fJ4/MzUfEX++oOy+P9YKI2/nhSGEDzjz/L
O8BIlejGJmXI4/1hpNQL7M7XyeP9YaQ+cCs4DwGf8OQ25VHA+8VITbf2IRma
E67/ORipcNmnYmYKeP8YKU49+5PnEV5vBir1nsKBHJr/Pl4XA7WDl0fxNfAz
r++bxhDeDwbKoO0p1yoKPx8DdcWKpziX5tN/A5qBWu1TNtusiJ+PgdqQxhu2
XhnvPz3F118Vq6mM14ueYpH0vuEGPOGzKStBGd8fHdVX0Zb/TBnfDx3Vuiii
tB+4Vl/+BZcKvj86qvT6YMNeFXx/dFROV0qLBXDCJv2uMBUcP3RUuCvDwD0V
HD90lN/DwrE2YEd663kGVfx8dNQRDT62LTT/DS8bOkrncvVyQ2CFD95rTqvi
eKOjtglt3nBLFccbHSVo377tJfCygog9v2je9Dfg6Ci6KXmlNWo4XuioYWpI
ax9w14VUYwc1vL50VNMb/WOxwM9WMto/UsPxs4AKzYvcvqjh+FhA6bet/TjU
ieOG+UJ2quP4WECeAT7Xg9Rx/C+gPakK5cIaeH8WkFjfUK2WBl7/ebRq+81m
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
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
         "]]}}, {}}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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
CIN5o0Ksr4iBh46raNRIghu1q8Tk5MD/Az/8tMk=
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
GSnwl+VVUsrK4P8BBhmArg==
         "]]}}, {}}, 
     LineBox[NCache[{{Rational[16, 17], 0}, {Rational[16, 17], 4}}, {{
        0.9411764705882353, 0}, {0.9411764705882353, 4}}]]}, InsetBox[
     TemplateBox[{"\"Measles\"","\"Pertussis\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.25, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"p\"", TraditionalForm], 
     FormBox["\"Max Time (yrs)\"", TraditionalForm]},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.999}, {0., 3.26}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1:eJxN2Hc8V9//AHCbaMhqoURSKSUqGeeSvbI1JVtGRmaSEIUQUiEkIz4SkaSB
yowKFaFEkigr2eP3rr7nd173H4/n4/F2xzmvda+QxUkDawY6OjpLRjq6P395
5CIaT0oNIp48tS5fHnaqSIffnkV6EJ0f0C8RPL+IGneRu7Zz1yCKfvZb7EgU
G2XmsU7hIM22Nn8ONqrKh6nHn2YD2q8H9Nmobf59F9NpVmBvueUiz0bFB9ZL
1NHM+/f8bNR8SP67IZrp/h5slE143Gne3YPoz6/ZW1ipV1HeQrI0P/9zuWes
1O64I9XmNP/99zxWKvUa5RSyG98fK8V2Q4Q7l2ZX+T8XZKVcbrI9bKSZ9s+0
M7BSrRk/zCZo3vn3YKWonDdMAnsG0dq/J2ClbucV5SjR/Pd22VkpzsJrenY0
j/+5/G8WyvuB3/glmhvq/xws1OdH5kmFNP993BIWSr1cWekDzel/bv8WC5X/
Qqxvnua/l49ioVbVLo4UkcHrxUIFNgzv1JTB68VC9Te+/XBSBq8XC1XalrTh
kQxeLxZqZu6xUd9e/DzMVIR5jPwS2UGk/mc51Jgp/ue2opKy+PmYKYULXJOn
ZfHzMFMBXHaJy+Tw/TJRLBu5u3fJ4/MzUfEX++oOy+P9YKI2/nhSGEDzjz/L
O8BIlejGJmXI4/1hpNQL7M7XyeP9YaQ+cCs4DwGf8OQ25VHA+8VITbf2IRma
E67/ORipcNmnYmYKeP8YKU49+5PnEV5vBir1nsKBHJr/Pl4XA7WDl0fxNfAz
r++bxhDeDwbKoO0p1yoKPx8DdcWKpziX5tN/A5qBWu1TNtusiJ+PgdqQxhu2
XhnvPz3F118Vq6mM14ueYpH0vuEGPOGzKStBGd8fHdVX0Zb/TBnfDx3Vuiii
tB+4Vl/+BZcKvj86qvT6YMNeFXx/dFROV0qLBXDCJv2uMBUcP3RUuCvDwD0V
HD90lN/DwrE2YEd663kGVfx8dNQRDT62LTT/DS8bOkrncvVyQ2CFD95rTqvi
eKOjtglt3nBLFccbHSVo377tJfCygog9v2je9Dfg6Ci6KXmlNWo4XuioYWpI
ax9w14VUYwc1vL50VNMb/WOxwM9WMto/UsPxs4AKzYvcvqjh+FhA6bet/TjU
ieOG+UJ2quP4WECeAT7Xg9Rx/C+gPakK5cIaeH8WkFjfUK2WBl7/ebRq+81m
d2B2b4OPiRp4vefRdBnjt+fAA6z3hwc0cH2bRx37baa5NXG+zqP6qyuY5ICf
dNYssdLE6zWP8jb6rogATj65RahIE6/PPApYuCTFpIXzaQ4prTU8nK6F82EO
SdoyWdcDC9+97zymhevZHGJCKwOVtXG+z6Eqs4+3e7RxPM6i4szIe4t1iLMG
0WMpHRx/s+iCf9rrYB0cX7PIp8rwQy7wiaXMX97q4HiaRVrJtuMiujheZlEN
Ha+RJrCq5bOCk7o4PmbR88qTy64AU2ICTqXAT8Pq6jp1cTzMItmfXmLM+4lL
9m8I2bwfx8cM2nWv6ct+4HVV8o2+enj/Z1Cy2MC2VD1c72bQmvBrEZXAfHq/
1Dj1cXzMoNh7qRnSwJy8uoyH9XF8TKNIrxnzAGCOtttPM/RxfEyjC3Im/C+B
WVIYfYeBg+gLWngNcPxMIzorM2lZYP8qjlhz4Bmxh8PnDXA8TSPvcBvd/4DH
f3LnvjHA8TSNTulVLBoHHrnnbLvGkNiZl7+SMsTxNo1+eNWutwG2b/MMCAfu
lRP5lG+I43EKWaU0yr4H7qI/e30G2MxKfGKdEa7vU6ij6oORKvDBTaH3HIxw
/E6h9+FSnJeBjQa7nIqBG/WiXrYb4fieQrqFcpvojYnreftDRIE1vK/2aBnj
+J9CVW3KSq7AyvKjKfHAFSkpc4+McX2fQgoMOoe7gB9bTZewmBDLVGfxiZvg
/JlExZuMT+kDS0UwNHkCFwzelUgywfk1ibbpH71UAZxbyD7QC7yJr0R9sSnO
t0mU6W2duQNYpJ2LyRT4pnz5cT9TnI+TyP+8xud04CMNTWYNwDK8Rz7+NsX5
OYn4jn49LHiAeCzduU0VuPHHxIGTB3B+TqI8qXMtV4Ej/NhNyoHtX8S+7TuA
83USqS4WMFx+kFjEKLNRBpg+SULP4iDO3wn06UvJqzDgx1uUdAqBr7u/fNl+
ENf/CeT5yEiT6RCxpsx3yYgjOD/H0cZzbgVFwEy1MxIfgbs5z+cxH8X5OY7K
Dizdug1YynvnxjdHcT8dR8vLH2dMAg+yqooImeF8HEf1+1+naQBnXz0g5AYc
0tmVkmCG83EcWW10EHwOrHhyLGkAWPDBmTU8x4hn5lkS5I7h/BxHrarRK62B
iyNXXb0EHPs+jbf4GM7P38hFUDzuE7CuzX0uVnPiLXkKlyWA2carlx0wx/n7
G/XK60cGAD8/37Y4Gzi1wTK8Edif9+eiaXOcz7/RLykupqTjOF9/o8m2iMrn
wPMBrKEDwEwbA9W5LXC+/kbsDbOLZIHXW39b1maB8/M3EuOwaKS3JN5W0BGz
CVjK1NRI3xLn5xiSmWvk9QHWu/J4zUornI9jyER290cEfKSrINkW2CJU3DwK
2HZrltADK5yfY8ixWejLJ2A3n6R0Fmti77UrbLYB+1de3mhijfN1DAU7LP5+
BjhseWhOBnD0A3rHBuArR/22/rbG+TuGUrNd85VtiHN/2+yMA7YqfmQR4YD7
4S807inpXQB8cXf2pfcOuB/+QvyTa2/NAOeVxJescySmfJa8UgFulgn+cgLY
Znp6MsoR598omix1XXofWEDumMwCsNITbSsNJ+K3Z577ODvh/BxFtgp7o2KB
p+fz00uAI8o2ln4EFgxIfs3gTFxA8X7dCKxMHzGt7YzzexS9r2DgdAO2C/TZ
cBV4Rml472PgSEZbvS7gdS8+WrOcxPk/ilRUXkbrAZ+oKnmUADwbItFYBhyl
ltnbcxLn/yhazyYwu8iFuKgmdrkEsOpF9o1GwB80zsn5ADuyT+onA8/XOds+
d8H1YhQJax+JWeJKrN6g8cQUuO1SeZMfsJPu7r6brrhejCC6ZXlzVcAxr0W4
fwCLRCeKLXcjfqDHpbALWHP5RcPDwB2NC3YBbriejCB6w5+xdcCib9ue8rgT
l8Tpv5UB1jKu+W7mjuvPCPrEixaCgF3e3+fJBmZudyhvPIXrzwiaDHg6PgXc
L7p863oP4o56S0tND1yPRtArt+LrbsCFTw+zPAe+xk7vzu1JHJZvmC3rievT
CDpjktlpCewyO8kbAWyRpqVdBGyknhzYAaw2OFzC5EW8N27fkDiw+N74DcZe
uN4No+UhsjEZwOONn+d/A/d57ZQW9CZuFwhxUPXG9W4YvXreetMZuNx+S2s8
sNH18rBWH1zfhpEq4q6g8yWW+Wo9IQYsHl6yVd8X17NhJLiDw8oHmPFM/pta
4L4aY/nVp4nbnG+7KwE38MxknziN6x3t/kp1PscA3zNP5XsEHJ+rEsThR3x6
sn/oMLBzsrxosB+ed4aRuXL0kVxgg/7umLfAytHStbPAu3ZdWBA5Q7ypo01a
B5g/cKujB/BSsYC0G2fwvDSMfrlvWDYI3FpWd1rBn7jOWuCeDfATDpe+SOD8
gmeCD/zxvDSE0kx5jTuBU1vv2W8+S5xyUM/fA1hwdQpbInBy28+YcmCBRDmB
3rP4/WsIJR0Oz+IIII4/Rj+9+xzuB0Mo7nPy0iDg2ONywq+AudaH3/kFHNP9
YfeqQOLlt8SeKQTi+k17b7L00rYCvmj7Mzk6CNfTQXShL6ywHTjEXqxGNJiY
ebOXgTZwcH9lhysw4388tleBAx0sRx4H43o4iM46Ja82PE/sd/LDvu/AMxJi
r5aG4Pr0E/kOex6QAp7Or+w+COzjyuN0Fth7tOBcHbCn+/543lBiF6/KPsUL
uD79RCvjmYttgMuLVILCge2az+vlX8D14SdaNlop8A7YTEK1RPAicZ5jlYEd
8MDx6seRYTjff6C9KWqmrcBhHdUjQuHEkjOsZarAH1apRziE43z9gQL2XDgY
DSxmWiN6H9g7Tr1iHri6seawegSx8zDbJidgvmUa45eBn269+LwY2Ea7Nro9
AufbD8RcXVvpfIk4XbFumj6SWNucvUYUeMxf84pWJH4/GUBJN8IsXID3Pa6T
uAIcM6VZ9wm4e9dLK7Eo4jBjDkkdYMlTWguuwG0x4fXxwOcKXl5/FIW/fw2g
N4NaUszRxOvE61/pAp+017a/Bvw0s56xG9imcnEjy2XipT3ayVuAixkuOehd
xvPhADoq1LDHA9hvh/wITwxxguKd7CLgNJXaqx0xeJ7rR9kaX88zxRLn69Cf
Egcu0RewMAKuOWiskA7ccvzS6jHgT9bZbPxxxL32leP7gAedunoc4vD3lX40
7jrXFAvM7Ct99wswT6BT+M4rxMJhGbZBwJIxH/c1A++Nn9oxA6yUwLtOOB7P
W/1IM3nHUi1g/TSdWTdgFeFXZS6JeD74juJvbKthTiLuWxH1JgHYb1cWVznw
cuMyo6/Ame4t8ew3cP/uQ3tjhlolgC1frz3qCxyxWK/rBfB9jQDrZcnEn0Ly
vx8Edsuo2XIWmOXFZ6d04ITuybu1wBL0y0cHk3G/70MBp12ng1KIm343MqxK
JZ6RZAi1BBZxkeTIAy6J1NRpTsX9uQ9p37GImgT+/NK3UeAmsUd/DPc+4Cqr
X2tagVd2Goo4pRHnzjnYxAAr8gfffgD8fm9Sf0ca7q996MTBInGGW8Qx8T35
2sCPmnmkrwL3cKo87AJerOshL55OnOp46aw+sHR4RoUncF32E8YkYLOadyoV
6bgff0MSrRmNFhnEdH0eR5kyib8PHRU2Bm6aUPmeAVw1I6P9KhP372+odGHr
3XHgPMb1XGuziG+x8nmoAfepmqQ3ZON+/Q25V75naMvD/bMXZWlL+D0vwf3k
K9Kr5fTsA55WGT255CFx+rNme0lgXXTf0vQh7ic96OYeb9ObwGM7ZLUGgBNE
KiTPlhJTK9RWcz8i/tBlVmLxBPeHHiTeLpSbCxzwtidlHHizftX1NU+Jmxuy
YilgP82Ll6yBRatPhIY9xf2jB9U/HHYWLCN2y/U0uQfM4RU5Rv8M1/svaMdC
0LE0YNNQnzql58QntMYWYoDPLDsp/QU4xFVcj+MFcXTz9xM7X+D6/gUlSGed
Pwx866pVahBw7dpDHCKVxENZ+z1fADM41v3HU0XMu12lywpYMIZhNgJYbKyM
7z6wpMmZHR+BZUv2ajNX4/7xBYXWbFivWkPc3Mo5GVJL3LH3Fddd4N6k8K0t
wMPz6uoLtbgfdKMpcxbLjXXEizecu+YFvPb7TEM1sIrryB67l8QOU7232OqJ
ZwRVDaze4ffXLhSalLz7Qieuf58Rw42H5zZ+Jva78fZlFXDi0cPJg8ClAt0u
fF3ErR/t9ikAT9wY4rXpwvXwM5ISnCu9D+yWzG7O3E1sm0KN7ftCfCTV80Jg
D/Fp87lDOcAJ64K3NgGXfGanmwZuSb3cJPQV18PPiEcoxcsV2OBmLn8FcP3N
ahvzXmK1tO78BeBnaXPTyd+I5W6tVFHoIz5smbLCBthXWLT/EvC1L7mP7wM/
uLUz6mMfro+f0ZiwotTW78SS6bof/IAjfayXZPYTf9f1U3w9QEwxBUau+kEc
/zC03RJYKY6d4SLwT+dLYnnA1zQ49zf/wPWxEymLxHpMAo9GJi+79JM4dSo7
W2iQeMl+Zt+qUfx+8wn16N/Xb53F8/xH9GPCQQyxDP2vfnQgbjHfR57Lhv4X
n21IOv/cec9VQ//73vEBXWiP0n25fuh/69WKWsyu6vaJD/2vXregYEqYRXQb
seT6u08sJYiTV8dsKQRexO1xnWE7sUKUjd5m4FMcB1gNgHNCNZ76AH9mlPW4
SfO//vAePRij06d2EEd+rRLvBJarNujh30ncf/tT4iEp4orr6V5TwNfCThhe
kyZmDNKp+AbsfHq7xO5dxOkTQr1mNP97v3qH2ty5b4QAcw4zGeUBqziOs78H
dmx9/VBUhjhOOdvOS5Z4lVuwfwVwcsqxOA45YvNdOinbgYUb9uYY0/yv/71D
vZZi932Bb0/zlqcA3zOuH9gpT/w4P3BFDfAbmyHnYQXiL/xHqlZSxI5LAj0e
Ao/PZYkcUiSWHd/rlwMcMNjQPA2cduLqwnol4spe8y1aNP/rh29Rn8VmU3dg
9s5fgYnAAuWoq2Mf8fab4UhQhXhfYMuNY6rEJpbCs6lqxImHiw1HgD8bavyn
qE7M8IarxR54g3YHQwzN/8KxGanXZGwrBT6hfPJQN/CY1JVFQRrEZzY8KhHW
JB5v+1a8X4vYJZrn/mltYvGBzUXLdYi/qygWZgGru9ffGwXOTDW9J69LbLxb
QNISmOlVd8EF4EKr2zvygC1mnAqaaf7XD5uRkU31nS36xGqN63KCDIkz02eL
+IyImbxby7KBOxyjAl8BFx1XVfkFHGEyx7rSmNhSq6hOjuZ/38ebEJf0er0Q
4GeC0e9eA5+tVBv4bUIs57hAx3+AeIrrAZ/SQeLih87idoeIeS5p7p4BdjcX
VYo8TKxp/JGpkOZ//boRrdeMq24BnlbQCpsFbtrJoCN0hPicgEvTCeDtrJ9M
i4CzczguSx4D59eVqcs/TnxIrP5OK/BlhmOX6SyIazpGTokB0z0IPqBH87/3
u0bk4pCzNhW4c+2b3iHgpxfWeERZEieN2DBKWBEfeD631tmamPdKnNwdG2JR
uzerlWyJ98gunnoPXC6y2U7IjlhjqXqLA/BSxpall4GbJqxVi4Hjf4ydaQc+
1BV0n85+6H/zxRt0JnTGdfMJ4tSt7tuMHIifN/f3n3Ek7vWxyMpyIp7QTj4v
50zMtq7NshH48qLJpjUniVf/4lWyAf70Ld0nHDitY2dBPrBN47O+dzT/6+9v
0JYq/XUzwC52C5kBbsRF7He2sngQq7gfiMoCft/OOKLuSTx931nDFVgw+sPN
68BKJ5SnK2j+Nw+8QrbKdw36gfMngxllvYgncw8VhQOv9i/weuVNLLefTXa5
L/GLMZSscJpYO8GL3tGPOC9I5dADYE4n7kKGM8QVx32PiQG7mXRx6AILa6mX
uAO/RXetrtP8b55pQNe4tPi2+xMf/dpbXQXsvN0kUugcsf/pSiO/IOIdQp47
q4B7qkS5OIOJn646Sy8NfNWxZfggsEuZxGf/YDxP1SNNrguvbwHnH/0esfs8
MV+2puZL4G60pHI0hDjv/Wu0+gKxr1NMqeJFYlUmY2n7MOKpbGaeQuDc/cWj
s8AhaUu7hcKJj/22aVQF3qNeVu4Qjue/OsSVuCI/Gti719tJJIK4c0fb5hJg
z/sC22SiiJfKHN9ReplY3fWKYjfwuexaffYY4tKuueOSwGOrJN0OxeD5sxbZ
hiXE5AC3TTMUTgOXtzf/SoglznicLiUbR+zir1p8+gqxHNW3+3E8sfP7Ewe/
XSVOcfzpy3Wd2KZMoHP3dTz/1iBxLt19R4FHrfyzAoFLHuRx3AZWPrrs7Sjw
GwaXJPkE4u86O7Y2AzNcH31il0gsJeHRGZtEbFM5QVd2g/gs58PLRsnE1w77
ru8HFqFv75dKIc7PlC08C+w55bAiA1hOO+l0HTBDSn3nEHDtyOw+3lQ8j1cj
8VPlcTfSiCPHg75uyCAWbSmaqgYue/B1yYlM4t6hkZgY4MVi8yseZeJ5thJJ
mrPf+AJ84Brf+sVZxOlsEuJHgYe91XblAQvtzTYbvU1sMMMeuiuHuPrORNWp
/4jlzHtYCnOJw8a7XrUBf4jojGe4Qywm/NFs8x08H75Ang/bRA2AeXrfFd8E
LuBqVB0B/uFQbROdRyxa+SRE4i5xoldOlVM+Mefmqyy5BcSaQZdEte4Rn+8I
Uu0Hfut2bilXIfH6RWffywC7pvglHwcul/a1uViI57Hn6KiFx3gr8HSkS4hY
EXF+EoeqbzGxTU4mc30JscDiBHm+h8RvnS55mAPfFQy9fB447HXAnZyHeJ6p
QDYBvrWvgRV3nPo6Bpw3dsj4Yikxf4lipcAj4gmFZRmqj4mbKjuCTz4hLhPc
6c35lDjX66JDAbBwutRX+jLihDedZgbA72zuJ/qW4X5fjjjnwlrTgLVjzXlf
Aodu2mXwC9iivXuPdAWx3KWotV7PiDONlEr9q3H/e4pyQvIGu9/g+vQQOT4r
lfdsJN42XxWxqIl4Gb+OlCHwsExzexJwl3r83QrgJtODQb3Az2z4TTmaiQs9
Ojdvb8b5+gDt+TlRY/KW+LEVp+2Zd8T+qfzFnO+JqQ4x5nTg7QMDrTXAQtN5
uT+BuRa5BXC1EDOslDba3YLjtQh9kX40EwD8wlDxVh2w+suDiiOtxA1Kbp0r
2ogFdy9/i4Cdt+TX2AI/Xbv/SRTwUp7BggdteP8L0N3ZLYms7cR6X+2DTYFj
ir+aTAC/DT2+6WoHcUe9njtfJ97fPPTDRIKVtwdfLx3VWtft3wucecr62rEe
/PtkFBxE1xUMfDwmcVMOMH9+Y+kY8PsGVm30lbhc+XO0fS8+fxy6YXj6Q+T/
Oxj5WvCtLwI+4Fpw4gOwdIB24Xwvnjfp6Liivs0IfyMevhGorAGc86jkXSxw
aJ2h4ENgqw+DNp+A106ITIr1EcdJXl79FNhVUdzyC7CuXvV/bN+JFznPyRkC
+2fbH+sDtlunlM41QCy39NdW25/E5tw36qOBg1aqOZQC161PvL1kkNh09z7h
ImA389iV9MPEt+/tZEwcJa5/8PHmC+Chx6HUIPCu6vYzir+In7cHTX4D/sT0
9qfUb2J6dv8IM2CRZWJbLgA7rPKzawee3Cry5dw4Mf/OV+f+A0Z7vNe9Aw5R
qj8qNkGcreY5qw9cr70u8TTwsH6dTAYwt+mp1lfA/weJ0rU7
           "]]}, {
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          Line[CompressedData["
1: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
           "]]}}}, {}}, {{{{}, {}, {
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
CIN5o0Ksr4iBh46raNRIghu1q8Tk5MD/Az/8tMk=
           "]]}, {
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          Line[CompressedData["
1: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
GSnwl+VVUsrK4P8BBhmArg==
           "]]}}}, {}}, 
      Line[{{
         Rational[16, 17], 0}, {
         Rational[16, 17], 4}}]}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"p", "Max Time (yrs)"}, 
      AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 0.999}, {0., 3.26}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]]}, {"Measles", "Pertussis"}, LegendMarkers -> 
       None, LabelStyle -> {}, LegendLayout -> "Column"]], {0.25, 0.75}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.739637795239702*^9, 3.7396378973574862`*^9, 
  3.7396385746739273`*^9, 3.739638647116107*^9, 3.75898712678127*^9, 
  3.7589881601096487`*^9, 3.758988236565995*^9, 3.758988310862185*^9, 
  3.758988527860829*^9, 3.7589886706354537`*^9, 3.7589888535028086`*^9, 
  3.7589892047333136`*^9, 3.7637459426297145`*^9, 3.7676388991789527`*^9, 
  3.7676390482616615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<AmpEnvelopeTime.pdf\>\"", ",", "timeplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.739637811498203*^9, 3.7396378254229484`*^9}, {
  3.73963793703533*^9, 3.7396379551339045`*^9}}],

Cell[BoxData["\<\"AmpEnvelopeTime.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7396378273517866`*^9, {3.7396379426264005`*^9, 3.7396379565122194`*^9}, 
   3.7589883625665407`*^9, 3.758988678000704*^9, 3.758989220579008*^9, 
   3.763745943524641*^9, 3.767639049276557*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ampenvplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"AmpEnvelopePDFE", "[", "p", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", 
         RowBox[{"AmpEnvelopeMDFE", "[", "p", "]"}], "]"}]}], "}"}], ",", 
      "  ", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{"1", "-", 
         RowBox[{"1", "/", "R0"}]}], ",", " ", "0.999"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", "  ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "4"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<p\>\"", ",", " ", "\"\<Log [Max Amplification]\>\""}], 
        "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"AmpEnvelopeP", "[", "p", "]"}], "]"}], ",", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"AmpEnvelopeM", "[", "p", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", 
        RowBox[{"1", "-", 
         RowBox[{"1", "/", "R0"}]}]}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<(a)\>\"", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "12", ",",
            " ", "Bold"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "3"}], "}"}]}], "]"}]}]}], "]"}], ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", "R0"}]}], ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", "R0"}]}], ",", " ", "7"}], "}"}]}], "}"}], "]"}],
      "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73851611071463*^9, 3.738516111647391*^9}, {
   3.738516230375119*^9, 3.7385162487739143`*^9}, {3.7385163643674774`*^9, 
   3.73851639826348*^9}, {3.738516477306359*^9, 3.7385165077881327`*^9}, {
   3.738517426223092*^9, 3.7385174545259914`*^9}, {3.738517891585456*^9, 
   3.7385178947594004`*^9}, {3.739636366590318*^9, 3.7396363754405932`*^9}, {
   3.73963640973487*^9, 3.739636468045825*^9}, {3.739636601798619*^9, 
   3.7396366210371494`*^9}, {3.739637056638734*^9, 3.739637064663228*^9}, {
   3.739637141045987*^9, 3.7396371637362804`*^9}, {3.7396372521192164`*^9, 
   3.739637310601715*^9}, {3.739637390262581*^9, 3.7396374316119847`*^9}, {
   3.7396375488193645`*^9, 3.739637550134841*^9}, {3.739637696018171*^9, 
   3.7396377450160775`*^9}, {3.739637842490285*^9, 3.739637845599964*^9}, {
   3.739637976985865*^9, 3.7396379873162513`*^9}, {3.7396380625619*^9, 
   3.7396380961051545`*^9}, {3.7396382362591705`*^9, 
   3.7396382367608337`*^9}, {3.7396386783495445`*^9, 
   3.7396387272556934`*^9}, {3.758987673670951*^9, 3.7589876987361364`*^9}, {
   3.758987747427308*^9, 3.7589877531741533`*^9}, {3.7589878204424973`*^9, 
   3.7589878510183773`*^9}, {3.758987883500169*^9, 3.7589878882803993`*^9}, 
   3.75898796357382*^9, 3.7589880267993193`*^9, {3.758989323476102*^9, 
   3.758989334251788*^9}, {3.7589893735309935`*^9, 3.758989374018031*^9}, {
   3.758989439297367*^9, 3.758989444765171*^9}, {3.763746045637617*^9, 
   3.763746055723775*^9}, {3.763746089763295*^9, 3.763746140175969*^9}, {
   3.7637461933770094`*^9, 3.7637461990136395`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
CfrQSef/AvHhlxo=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
P6Ayn1XQ4Bsq/w91GISr
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV1Gk4lAsbB/AxlhmzGQYlJ9RbTlnqhOhkuW/b6Uh7TkfLyJYiyislUiFF
SCKUOtFJyUgqio4S8qKyRkJq7Ms8zzNZIikc74f7+l//L78v/+u6F7kf3raP
TqPRrszd/3OZ0fbzFelOVikd03GqzdMgx3t9xYAwgkZNI6eKue7yHXfKEjbw
+ZdCjcB308AOCH0qlWyDLl5BelPLNLgZpnn3Stxh7GtwamLbNHDY2dZiSQBU
HbY25YunoTv4QW6HJALu+qqvYkmmYeOqAo8PkkSIaWV7baDNgNpmJ+3oJ7dA
aZDt8/uqGYjrtjp9zyEXXj1un9F3nQGFvuXfhTvyYY/9PFkqfgYagmX3P/Mr
gqzV4Yys8hnQslSr0V7xHCaX9bgMjs3AP/ziYQO9MvitS7fkmd4sDM4zLbN7
+BI6B6YOvXObBWfTjTwxpxLCVh5OPZQyCxv7YvM9r1WDletrvTcNsxCZ4/XO
d+Y1jLJb6NvlaFiiwHl++I9aUMijmHt1aBg62vpDKK6HhpwX55OAhi+mMvYM
aDWCmUuEJFhIwwi7Ia/k/W+h8t65jf87RcPKVvVmFDWBnU3p1XMZNMw5nnja
8H0zzJPzKesqpWFT56L3Fxe2wJYlAxaTvTS87jTra7zpPSQfyXCvY8hgVsLw
/Q1XWiFpi67d8xUyaDKvartHRxtkLTyouXOHDLpnE6bFrA+QuXpteGioDL6V
XVIZva0DJFNbcoKyZLDHW5SUGvkReGGHRQsaZfDoAvWKWw8+gdYR+tR/v8vg
+qTkjKUTYigXFpZZ6dNRHPtQ+CWxE+Y/2GpZupOOa40WlyWYdcG5WZkU/3g6
tpyUb9Fv6wKTijZhXgUdbeuVYgYOd4PrbRmy9hsdG+WWqLoIeqA8QD7B3VQW
V+Jey/GcHkh5cg+UA2SxToc7P9a6FyaqiMWtebIY31dR/aGnF/r9A2M4X2VR
+8Gt+RtP9IFPGcdx0FIOG13irIK1+6G1+mjUmgQ53C64LltZ1A8zFs6BGj1y
qO6nFaK8eQBcnVs5vWvlcUokqpw3OgAbc0ZVuv6Wxzyp8JFVzCAwevUvVHEV
8Ky6ZqDOyiGwC4pSIOMV8HrP+gFa4xCcldMlS7UYeObJzW8yByRgfU9UWF/E
QNdfbYcSfCRwNGRU92YxAy2e9bZq+0nA/LypSUAJA7+U/VxkGSCBoOWlNzQq
GOhZm3ssOFQCetyl+yLqGWjf+3RsOEECq8tudj7qZyBD5S0lfioB3Ynq3enq
TIz1o3c/ZxMwdoSveOIkE0/F6Tgt4hHgbrCLyAxjYkCOVWUkn4BH859vrjvD
ROehEJGjGgE6o2itF8NE3X1jAW1aBGhs91gyk8LE8j29suOrCGgq96DpPGTi
pGPlUgNnAsbjR4QeA0wkfXpTL+4i4LN4dUuXhIni83TW2B4CUktD8vdKmVhZ
ZSV96kZAzaXCsAPjTEyyLXyy7iABtV4q4quyirjC/O46j1ME2Bg7HErRUURP
vRjvtMw5r2FRElOoiKTgUMvIHQI+pr791OGqiEent9o6ZBPwRhh56IGnIp5r
0Fg4mUsAY5fIwctXEbOOZTf8UUjAndvrL/44oYiS8moz5dcEnPPuufPhmiL6
72YoRH8mYJaXfinzkyJO2hEB4hECvox5fpjoVsTwFfVi0y8ETE/wF28YUMRE
mdSnfZME9EWsYioMK2J+lq6fLZ2EYq1j3Q9lWDgxZt88o0rCSmuQHVnKwpNx
kX8fXUvCyKzkhW8AC1P+Kp2atSBhQf2ga2MQC+/f/7EtBkh4SDbcND/Jws6G
QNl0OxKqY0ZAL5qFdmr7PKs3keDWGcIW3mAh54a9rqYHCW+msq3W1LAwLU9B
VBpLwhfX6+G+K9iYX2pDd4wn4dErg+udJmysaTy1610CCS97p6Qu5mycGZtg
SZJJ6Oj/82PI72x0XzNwUJBBQnjyeo3VHmxcXlZl6FVAwoHoZ1CXxsait9EP
2R9JoBWYhpUJODh42jrOR0xCBHFWw06Tg/MNp7xedZGQpmqk17yYg8FRB3+K
6ifhmsX9ZQuNOLjWYlMUfZgEk6te3u5bOVh8WyD8RqfAxcGvpi+Rg+S2GjNn
eQoYHfpCj2sc/Il2VqWQQcEFUY/CyC0Ohu6aqArkUCBX8TDI/jEHLZTajIbV
KDi73Lq/qZWDJcdvMAeWUdAXOaja+B8uSpf+2WOvT4ETJ5iVYshFrSalkkxD
au5fXQ4PMOPiKcPwI+5GFBzoUNsc6MhF6Pb49NGcgqHLVTE5gVwsdVxe0LyJ
gonjrwK8arg4PNkVb7yVgsGmqYVD77mocyfNO3E7BZMqJsZxPVwMp3G0tzhT
EHtm81bz71y0eSw9/8aNgs+bdcIdDXj4Uqtgb3kgBbWzAwn8FB6uiYqs2x9E
wanjdv7Ft3l477OTJTeEgs6lV3+/9ZiHl0vHFzifpsAo95f9Zi089HI3a6HO
U1BEbzHOWqCE7a8Z9klxFKiNae8MM1DCTcat+WsuUmD959i4yEoJzeSCL525
TMHt4+00mqcSMu/8s0EjnYKossKvCvlKGMqLLS65ScHqe63nqqqUcOTYbj3P
TAp0MrrvTnTM+et+MPKyKbAqf5+zU46POUOWL+0KKPjYaZK3yJiPOtt4RpIn
FGSLvzpHAx8v//Mp4+JTCrzbB55ZbeBjaOzpU+0lFPjbSiZFXnzcZFj2q/8r
Cuqmdl/nZvCxPPnSXbUaCl7mRt0NyeOj2YzbvOI6CvI074R5vpjz6+nj8s0U
cPPVQus753yzJo+cFgqi1Rh9HqN8ZGbceruljYIYG+HZa3LKOOJv9+DaJwrq
E2otf9ZXRq82VW3rrrk9K0X0q6CM7dZ9F/p7KCADHa8MOSljucq5g6uGKPgR
qF4XEqGMpid2tLcQFNjv7K0m05Qxp0fXIVRKgfkC75qbBcp4uaBKt2qMgoSg
WnkfUhmZC68k+05QoPzGzbyNpYKhZw/IqXyjwJFdpL1OXwX37VDs3jNDwWhc
8h+8IypoOrn+r1GmFNj0Wj8lOQGKXDU5V9hS+G2zTcmUrgC1XxEhljwpdK9w
vHnAQYDMtDjnaIEUHNJt94njBBhKF1YZqksh5oe5yUiuAId9DE2b5ksh+ALr
ZGqdAD2bpjOPa0ph18IBjRapANvM6wRaWlLIis24/4Cniv8C+96Esg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHk41IsexmexzWLMGDNJ1huKE106x6To+63QLVGJKORYIkk5kiLRQimK
LBV1yjlaLG0ikdLCpZTITieTPfOb39hSqKbr/vE+3+d9nu/zed73NfDb67KD
RqFQLs/q/3eh5eZT1VddV5jf+sHYbkVFBU7dxUWEJdwvU2GVzvrt33ArnVgF
TXU/mRwRFVnhMeUyiQu0mtxXrpz1vmbZwf0SP7CeWvhZx5qKbFb+SrEkHPx+
BmV9WE7F3qh7t/+RHAOT3giB10oqOlmU+L+XpEH6GV6b23oqCja46iWW5sLX
/spQ5wAqJveuiLu19jbYRMsDth6iotKAyTfvLcVQsCXIyCmNio1R9KDHoWWA
+WbKtwqpqGsreKNn/gSMd4OFRjUVH3ErRheZPgeXvsM60m4qfppj9dyuqAoG
zriR5DQVPaycOGJ2DXhSbG718mnoNJBUHHDpJRCG1xPS/03D+MLA1t3yOmAI
njPGHWlYqcR+stetHjrmVzAzg2gYM97x3VvcADUtPq+9T9Dw6UyO15DuO9jz
SiuvPZeGx+yGAzODmqDh02BzfjUNazqELVjQDN1+j1d1DNCw8GBanFl7C2gL
sw/cV6Rj80eD9hSdNlhqeiBskwkdL7v+3L3EuR3CTM+wrzjS8Wbq6J31Fzvg
ZtGF6/I/6PjrnNrN/v90gnu4e+zERTr65RNWFcz30DpI982rpGMT3bAm0eUf
2Od2niocpmNfcEH6hfgP0KtCv81XV8D9WsLq3HvdMNMsUhxZroDr0jNzjL6I
4f386jJWiAKKk4q8P6d9hJ3TUgdhlgIus/zX81RRD7z2aP1rQb0Cth1WbPul
swcWUDXP1tIUcXWD2umhvb1AabyXYS9SxHcKhhrb+X0w+afyed19irgYfWwn
C/tgQ597Md5RxLf6qppJK/vBYLpV7kUo4tmB6pfv+/rBqWFBcY+FEurdy9V0
OjQAoquPn849qITvtieviNIbhPNyR8nNV0q4mX+ZXlM2CMtuNGxtmaeMwlDd
aN6GIdg4/340ZZ8yzhQU1MwZH4IJ16Tr5l3KeFfmfX/F6U+wtWjita+dCiYI
50XoLx6G13OjO6urVfBy37ohyrth4F0dqWrfzMDjpX9NU3dKQHvDzFcRycDf
rVcPp+6SwKNLDwxURhlo87i/Qy9UAh8fl/S3jzPw8/MFZbbhEjhgulAUOcXA
gPrbkVExEpjR/pbYRmeifX/5xGiqBEYu5FSNajFRWb2JFJdLwCZOa3HROiYm
hdJ6n7AI0CnPL7YpYmJssr6rAYcA/4kO/vYSJoYXrqiJ5xJgBy3yxIdM9BiO
LnAUEBAtTa7/+ISJxjsmwjt1CWipdxgprGPiC69++qQFAdQHp9Qq+pk45Vhj
tMiDALiT5yTWYqF0V/+FlG0EpH2PPOWpy0LxKRpzwouAI0Z7DdsNWFhTu0JW
7kuAtsKzmfcLWZi++mHpmhAC3KwL7ymLWGi+PG+NfywBR1V6joxsZmGA6eng
7GsEnGv1/MMxdZbP39M2doOAouONB3QyWLj/x6bVa/MJOOtTWCG7wMITjXN1
pm4TMCo0ZOZeZeHNyPxGt4cEbJGdq118l4WSFy9FvDoCnDW96pQaWBjmqayU
OEKA3G9S+ITHxik7Ilw8RsCBKhtVNSEbj5o3iK0+E+Ax6L45QIuNadQL5QNT
BPgmGZRqz2dj8U3j0NU0Kay1MVGt+pWNXybsW+QaUjgdS2FQtrLxcHL83/uX
SWGDrXlaxHU2nv/z2cxPGykcJa3oXQVsvHPnu8tpkALhs/CS/T02fmyMoF+1
k0Kw/HDwkgo22gl2BLx0lsIHw5B/B71jI/uKvfE8fyn0Sla3OPxkY/ZdpYJn
SVLYe8zSJNlXFYufraI5npVCkau8WGGnKr55F7utNVUKf1/SSk/Yo4ryiS9M
SaYURO6Ju64dUkW/pUMh/BwpOJKeFkHnVdHkea1ZYIl0dp/8W8K3qljWlFjE
+iCFZNLTZ+0aDn6KW5m8SyyFQMuJxY3OHNQ0mwl81SOFMkbueMAWDkadDNE+
OSiFz72N/ynfwcFlNs4naaNSYCwtneQncLDiOt97mkbCis6KxS9rOCh1eSPy
UCRh7DYrdX0DB7UpCeoPlUkY9xVX9bZzMGbbl9oINgnbc4/H2A9z0Eat03JU
QIL2zpNeE2w1rDx4RWVoIQkhUVRHaw81lBm599n/QoJklB7A8FND3Wa1ymtm
JAxzTfVHQtQw1uzoPj9LEhT8szOUj6gh9Pp3f1hOQkzkIsqefDV85mhS0uJM
Al3321gdhYujUz1nl2ya/Q/K8kxX4qL+jezgtM0krNrYeC6UzcWjFLbeRg8S
ckpi4t00ubjqgezUa18S7h7h6VItuFilW+LzIoIE6xTMsArk4tKT8W+DDpAQ
0OngrrmHi7dGXG1Vo0mw95UkaUVyMePZpJZHHAmONPnXIye4GOgnaiNPkWB7
K9zhax4Xu+qU7dOTSeiu2nJssoiLzks6ipemkKBIESRoV3BRpBB17ngGCfr/
9bSU1nNR5caj9XOvkvDtwTzrqkkuxnCSKir/IiEyti56GYWHY5GepgHXSGC/
ZeQOM3nYtea78t18EjzGFqfP6POwcNi2yq6EhDltJyp+3chDfReOpaSUBIcE
MrvCi4cZj7pzUspJWKs7JU8L5mFMUlxsVyUJ0xGCqw7xPHQ2e24d9ooElz1i
I+dKHr7IPJcneEOCvPi0qaSehyK575yKtySofv22SrF7lt9Am1RsIeHvgs/x
73/O8kXN/oVts/kMjpQU8NRRJSe3aWPn7L6uJfv1DdVxLMzu3qVuEo7WhdJ/
c1THwE4NvZU9JFgkPgkb91HHrpUDZwb7SIh1Pq+fsV8dX6ifCLEYns0/96lz
V646Wh3a0tVGkHB56PXDosfqWNhnvDZGNtvnxwZha5s6ZpTUGtdOkBDn8Nsf
WWp8VNG5mLn7CwmP8tNKs8z5GJOwU0F9epYvk/nlbeDjKLl038NvJPSVnGTw
9vFxxxZGr5echKyE2h0WWXzsquzcSKPK4HSJZnnsCz46Lyh4epMuA66RgJky
wscXKdHmTkoy+C3NLMfYQAOtptb9Oa4igxsNnl/We2hgwe/z2BdZMnBfv2lb
e6YG6r0iom05MqiOcQsua9ZAlexkj0S+DMJ2D/BerRNgDM271kwog1N5WZnm
8QIc3WVm1awpg6JEj0mHxwIMaP5x7eA8GUSkN4mNJwTYufwtX1dXBqlXdvB6
Fgrxf/PtgA0=
       "]]}}, {}}, 
   LineBox[NCache[{{Rational[16, 17], 0}, {Rational[16, 17], 7}}, {{
      0.9411764705882353, 0}, {0.9411764705882353, 7}}]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"p\"", TraditionalForm], 
    FormBox["\"Log [Max Amplification]\"", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.998999998819928}, {0, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7396380191131477`*^9, {3.739638098495757*^9, 3.7396381240264864`*^9}, 
   3.7396382509259305`*^9, {3.739638711897818*^9, 3.739638741248289*^9}, 
   3.7589874790321617`*^9, {3.758987698558111*^9, 3.7589877171477904`*^9}, 
   3.7589878691322393`*^9, 3.7589879068595953`*^9, 3.758987980462817*^9, 
   3.758988042543112*^9, 3.7589892989518843`*^9, 3.7589893661763177`*^9, 
   3.75898940697114*^9, 3.7589894780899897`*^9, 3.7637460100953865`*^9, 
   3.7637461820691614`*^9, 3.763746239968382*^9, 3.7676391101064143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<AmpEnvelope.pdf\>\"", ",", "ampenvplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.739637811498203*^9, 3.7396378254229484`*^9}, {
  3.73963793703533*^9, 3.7396379551339045`*^9}, {3.739638276439704*^9, 
  3.7396382863710957`*^9}}],

Cell[BoxData["\<\"AmpEnvelope.pdf\"\>"], "Output",
 CellChangeTimes->{3.739638288753721*^9, 3.7589883462633963`*^9, 
  3.7589895055760694`*^9, 3.7637460106869545`*^9, 3.7676391110672293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ampenvplot", ",", " ", "timeplot"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "20"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7180399641484113`*^9, 3.71804001448149*^9}, {
  3.718040333807744*^9, 3.7180403500105305`*^9}, {3.7180406247723846`*^9, 
  3.718040626764123*^9}, {3.718040713433446*^9, 3.7180407184419165`*^9}, {
  3.7180409847011547`*^9, 3.718040985926634*^9}, {3.718041088880171*^9, 
  3.718041093954279*^9}, {3.718041138655407*^9, 3.7180411663926888`*^9}, {
  3.7380822316487923`*^9, 3.738082232617165*^9}, {3.7396384433113904`*^9, 
  3.739638452835905*^9}, {3.7589886925308285`*^9, 3.758988746099103*^9}, {
  3.7589937057934504`*^9, 3.7589937210397186`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[
          1.], LineBox[CompressedData["
1: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
CfrQSef/AvHhlxo=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
P6Ayn1XQ4Bsq/w91GISr
           "]]}}, {}}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[
          1.], LineBox[CompressedData["
1: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
wanjdv7Ft3l477OTJTeEgs6lV3+/9ZiHl0vHFzifpsAo95f9Zi089HI3a6HO
U1BEbzHOWqCE7a8Z9klxFKiNae8MM1DCTcat+WsuUmD959i4yEoJzeSCL525
TMHt4+00mqcSMu/8s0EjnYKossKvCvlKGMqLLS65ScHqe63nqqqUcOTYbj3P
TAp0MrrvTnTM+et+MPKyKbAqf5+zU46POUOWL+0KKPjYaZK3yJiPOtt4RpIn
FGSLvzpHAx8v//Mp4+JTCrzbB55ZbeBjaOzpU+0lFPjbSiZFXnzcZFj2q/8r
Cuqmdl/nZvCxPPnSXbUaCl7mRt0NyeOj2YzbvOI6CvI074R5vpjz6+nj8s0U
cPPVQus753yzJo+cFgqi1Rh9HqN8ZGbceruljYIYG+HZa3LKOOJv9+DaJwrq
E2otf9ZXRq82VW3rrrk9K0X0q6CM7dZ9F/p7KCADHa8MOSljucq5g6uGKPgR
qF4XEqGMpid2tLcQFNjv7K0m05Qxp0fXIVRKgfkC75qbBcp4uaBKt2qMgoSg
WnkfUhmZC68k+05QoPzGzbyNpYKhZw/IqXyjwJFdpL1OXwX37VDs3jNDwWhc
8h+8IypoOrn+r1GmFNj0Wj8lOQGKXDU5V9hS+G2zTcmUrgC1XxEhljwpdK9w
vHnAQYDMtDjnaIEUHNJt94njBBhKF1YZqksh5oe5yUiuAId9DE2b5ksh+ALr
ZGqdAD2bpjOPa0ph18IBjRapANvM6wRaWlLIis24/4Cniv8C+96Esg==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHk41IsexmexzWLMGDNJ1huKE106x6To+63QLVGJKORYIkk5kiLRQimK
LBV1yjlaLG0ikdLCpZTITieTPfOb39hSqKbr/vE+3+d9nu/zed73NfDb67KD
RqFQLs/q/3eh5eZT1VddV5jf+sHYbkVFBU7dxUWEJdwvU2GVzvrt33ArnVgF
TXU/mRwRFVnhMeUyiQu0mtxXrpz1vmbZwf0SP7CeWvhZx5qKbFb+SrEkHPx+
BmV9WE7F3qh7t/+RHAOT3giB10oqOlmU+L+XpEH6GV6b23oqCja46iWW5sLX
/spQ5wAqJveuiLu19jbYRMsDth6iotKAyTfvLcVQsCXIyCmNio1R9KDHoWWA
+WbKtwqpqGsreKNn/gSMd4OFRjUVH3ErRheZPgeXvsM60m4qfppj9dyuqAoG
zriR5DQVPaycOGJ2DXhSbG718mnoNJBUHHDpJRCG1xPS/03D+MLA1t3yOmAI
njPGHWlYqcR+stetHjrmVzAzg2gYM97x3VvcADUtPq+9T9Dw6UyO15DuO9jz
SiuvPZeGx+yGAzODmqDh02BzfjUNazqELVjQDN1+j1d1DNCw8GBanFl7C2gL
sw/cV6Rj80eD9hSdNlhqeiBskwkdL7v+3L3EuR3CTM+wrzjS8Wbq6J31Fzvg
ZtGF6/I/6PjrnNrN/v90gnu4e+zERTr65RNWFcz30DpI982rpGMT3bAm0eUf
2Od2niocpmNfcEH6hfgP0KtCv81XV8D9WsLq3HvdMNMsUhxZroDr0jNzjL6I
4f386jJWiAKKk4q8P6d9hJ3TUgdhlgIus/zX81RRD7z2aP1rQb0Cth1WbPul
swcWUDXP1tIUcXWD2umhvb1AabyXYS9SxHcKhhrb+X0w+afyed19irgYfWwn
C/tgQ597Md5RxLf6qppJK/vBYLpV7kUo4tmB6pfv+/rBqWFBcY+FEurdy9V0
OjQAoquPn849qITvtieviNIbhPNyR8nNV0q4mX+ZXlM2CMtuNGxtmaeMwlDd
aN6GIdg4/340ZZ8yzhQU1MwZH4IJ16Tr5l3KeFfmfX/F6U+wtWjita+dCiYI
50XoLx6G13OjO6urVfBy37ohyrth4F0dqWrfzMDjpX9NU3dKQHvDzFcRycDf
rVcPp+6SwKNLDwxURhlo87i/Qy9UAh8fl/S3jzPw8/MFZbbhEjhgulAUOcXA
gPrbkVExEpjR/pbYRmeifX/5xGiqBEYu5FSNajFRWb2JFJdLwCZOa3HROiYm
hdJ6n7AI0CnPL7YpYmJssr6rAYcA/4kO/vYSJoYXrqiJ5xJgBy3yxIdM9BiO
LnAUEBAtTa7/+ISJxjsmwjt1CWipdxgprGPiC69++qQFAdQHp9Qq+pk45Vhj
tMiDALiT5yTWYqF0V/+FlG0EpH2PPOWpy0LxKRpzwouAI0Z7DdsNWFhTu0JW
7kuAtsKzmfcLWZi++mHpmhAC3KwL7ymLWGi+PG+NfywBR1V6joxsZmGA6eng
7GsEnGv1/MMxdZbP39M2doOAouONB3QyWLj/x6bVa/MJOOtTWCG7wMITjXN1
pm4TMCo0ZOZeZeHNyPxGt4cEbJGdq118l4WSFy9FvDoCnDW96pQaWBjmqayU
OEKA3G9S+ITHxik7Ilw8RsCBKhtVNSEbj5o3iK0+E+Ax6L45QIuNadQL5QNT
BPgmGZRqz2dj8U3j0NU0Kay1MVGt+pWNXybsW+QaUjgdS2FQtrLxcHL83/uX
SWGDrXlaxHU2nv/z2cxPGykcJa3oXQVsvHPnu8tpkALhs/CS/T02fmyMoF+1
k0Kw/HDwkgo22gl2BLx0lsIHw5B/B71jI/uKvfE8fyn0Sla3OPxkY/ZdpYJn
SVLYe8zSJNlXFYufraI5npVCkau8WGGnKr55F7utNVUKf1/SSk/Yo4ryiS9M
SaYURO6Ju64dUkW/pUMh/BwpOJKeFkHnVdHkea1ZYIl0dp/8W8K3qljWlFjE
+iCFZNLTZ+0aDn6KW5m8SyyFQMuJxY3OHNQ0mwl81SOFMkbueMAWDkadDNE+
OSiFz72N/ynfwcFlNs4naaNSYCwtneQncLDiOt97mkbCis6KxS9rOCh1eSPy
UCRh7DYrdX0DB7UpCeoPlUkY9xVX9bZzMGbbl9oINgnbc4/H2A9z0Eat03JU
QIL2zpNeE2w1rDx4RWVoIQkhUVRHaw81lBm599n/QoJklB7A8FND3Wa1ymtm
JAxzTfVHQtQw1uzoPj9LEhT8szOUj6gh9Pp3f1hOQkzkIsqefDV85mhS0uJM
Al3321gdhYujUz1nl2ya/Q/K8kxX4qL+jezgtM0krNrYeC6UzcWjFLbeRg8S
ckpi4t00ubjqgezUa18S7h7h6VItuFilW+LzIoIE6xTMsArk4tKT8W+DDpAQ
0OngrrmHi7dGXG1Vo0mw95UkaUVyMePZpJZHHAmONPnXIye4GOgnaiNPkWB7
K9zhax4Xu+qU7dOTSeiu2nJssoiLzks6ipemkKBIESRoV3BRpBB17ngGCfr/
9bSU1nNR5caj9XOvkvDtwTzrqkkuxnCSKir/IiEyti56GYWHY5GepgHXSGC/
ZeQOM3nYtea78t18EjzGFqfP6POwcNi2yq6EhDltJyp+3chDfReOpaSUBIcE
MrvCi4cZj7pzUspJWKs7JU8L5mFMUlxsVyUJ0xGCqw7xPHQ2e24d9ooElz1i
I+dKHr7IPJcneEOCvPi0qaSehyK575yKtySofv22SrF7lt9Am1RsIeHvgs/x
73/O8kXN/oVts/kMjpQU8NRRJSe3aWPn7L6uJfv1DdVxLMzu3qVuEo7WhdJ/
c1THwE4NvZU9JFgkPgkb91HHrpUDZwb7SIh1Pq+fsV8dX6ifCLEYns0/96lz
V646Wh3a0tVGkHB56PXDosfqWNhnvDZGNtvnxwZha5s6ZpTUGtdOkBDn8Nsf
WWp8VNG5mLn7CwmP8tNKs8z5GJOwU0F9epYvk/nlbeDjKLl038NvJPSVnGTw
9vFxxxZGr5echKyE2h0WWXzsquzcSKPK4HSJZnnsCz46Lyh4epMuA66RgJky
wscXKdHmTkoy+C3NLMfYQAOtptb9Oa4igxsNnl/We2hgwe/z2BdZMnBfv2lb
e6YG6r0iom05MqiOcQsua9ZAlexkj0S+DMJ2D/BerRNgDM271kwog1N5WZnm
8QIc3WVm1awpg6JEj0mHxwIMaP5x7eA8GUSkN4mNJwTYufwtX1dXBqlXdvB6
Fgrxf/PtgA0=
           "]]}}, {}}, 
       LineBox[NCache[{{Rational[16, 17], 0}, {Rational[16, 17], 7}}, {{
          0.9411764705882353, 0}, {0.9411764705882353, 7}}]]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"p\"", TraditionalForm], 
        FormBox["\"Log [Max Amplification]\"", TraditionalForm]},
      AxesOrigin->{0., 0.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{0., 0.998999998819928}, {0, 4}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {190, -152.90421193686507`}, 
     ImageScaled[{0.5, 0.5}], {360, 291.2461179749811}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{{{}, {}, 
             {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], 
              Opacity[1.], LineBox[CompressedData["
1:eJxN2Hc8V9//AHCbaMhqoURSKSUqGeeSvbI1JVtGRmaSEIUQUiEkIz4SkaSB
yowKFaFEkigr2eP3rr7nd173H4/n4/F2xzmvda+QxUkDawY6OjpLRjq6P395
5CIaT0oNIp48tS5fHnaqSIffnkV6EJ0f0C8RPL+IGneRu7Zz1yCKfvZb7EgU
G2XmsU7hIM22Nn8ONqrKh6nHn2YD2q8H9Nmobf59F9NpVmBvueUiz0bFB9ZL
1NHM+/f8bNR8SP67IZrp/h5slE143Gne3YPoz6/ZW1ipV1HeQrI0P/9zuWes
1O64I9XmNP/99zxWKvUa5RSyG98fK8V2Q4Q7l2ZX+T8XZKVcbrI9bKSZ9s+0
M7BSrRk/zCZo3vn3YKWonDdMAnsG0dq/J2ClbucV5SjR/Pd22VkpzsJrenY0
j/+5/G8WyvuB3/glmhvq/xws1OdH5kmFNP993BIWSr1cWekDzel/bv8WC5X/
Qqxvnua/l49ioVbVLo4UkcHrxUIFNgzv1JTB68VC9Te+/XBSBq8XC1XalrTh
kQxeLxZqZu6xUd9e/DzMVIR5jPwS2UGk/mc51Jgp/ue2opKy+PmYKYULXJOn
ZfHzMFMBXHaJy+Tw/TJRLBu5u3fJ4/MzUfEX++oOy+P9YKI2/nhSGEDzjz/L
O8BIlejGJmXI4/1hpNQL7M7XyeP9YaQ+cCs4DwGf8OQ25VHA+8VITbf2IRma
E67/ORipcNmnYmYKeP8YKU49+5PnEV5vBir1nsKBHJr/Pl4XA7WDl0fxNfAz
r++bxhDeDwbKoO0p1yoKPx8DdcWKpziX5tN/A5qBWu1TNtusiJ+PgdqQxhu2
XhnvPz3F118Vq6mM14ueYpH0vuEGPOGzKStBGd8fHdVX0Zb/TBnfDx3Vuiii
tB+4Vl/+BZcKvj86qvT6YMNeFXx/dFROV0qLBXDCJv2uMBUcP3RUuCvDwD0V
HD90lN/DwrE2YEd663kGVfx8dNQRDT62LTT/DS8bOkrncvVyQ2CFD95rTqvi
eKOjtglt3nBLFccbHSVo377tJfCygog9v2je9Dfg6Ci6KXmlNWo4XuioYWpI
ax9w14VUYwc1vL50VNMb/WOxwM9WMto/UsPxs4AKzYvcvqjh+FhA6bet/TjU
ieOG+UJ2quP4WECeAT7Xg9Rx/C+gPakK5cIaeH8WkFjfUK2WBl7/ebRq+81m
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
               "]]}, 
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
               "]]}}, {}}, {{{}, {}, 
             {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], 
              Opacity[1.], LineBox[CompressedData["
1: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
CIN5o0Ksr4iBh46raNRIghu1q8Tk5MD/Az/8tMk=
               "]]}, 
             {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
              Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
GSnwl+VVUsrK4P8BBhmArg==
               "]]}}, {}}, 
           LineBox[NCache[{{Rational[16, 17], 0}, {Rational[16, 17], 4}}, {{
              0.9411764705882353, 0}, {0.9411764705882353, 4}}]]}, InsetBox[
           TemplateBox[{"\"Measles\"","\"Pertussis\""},
            "LineLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& )], Scaled[{0.25, 0.75}], ImageScaled[{0.5, 0.5}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"p\"", TraditionalForm], 
           FormBox["\"Max Time (yrs)\"", TraditionalForm]},
         AxesOrigin->{0., 0.},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None},
         PlotRange->{{0., 0.999}, {0., 3.26}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{{{{}, {}, {
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJxN2Hc8V9//AHCbaMhqoURSKSUqGeeSvbI1JVtGRmaSEIUQUiEkIz4SkaSB
yowKFaFEkigr2eP3rr7nd173H4/n4/F2xzmvda+QxUkDawY6OjpLRjq6P395
5CIaT0oNIp48tS5fHnaqSIffnkV6EJ0f0C8RPL+IGneRu7Zz1yCKfvZb7EgU
G2XmsU7hIM22Nn8ONqrKh6nHn2YD2q8H9Nmobf59F9NpVmBvueUiz0bFB9ZL
1NHM+/f8bNR8SP67IZrp/h5slE143Gne3YPoz6/ZW1ipV1HeQrI0P/9zuWes
1O64I9XmNP/99zxWKvUa5RSyG98fK8V2Q4Q7l2ZX+T8XZKVcbrI9bKSZ9s+0
M7BSrRk/zCZo3vn3YKWonDdMAnsG0dq/J2ClbucV5SjR/Pd22VkpzsJrenY0
j/+5/G8WyvuB3/glmhvq/xws1OdH5kmFNP993BIWSr1cWekDzel/bv8WC5X/
Qqxvnua/l49ioVbVLo4UkcHrxUIFNgzv1JTB68VC9Te+/XBSBq8XC1XalrTh
kQxeLxZqZu6xUd9e/DzMVIR5jPwS2UGk/mc51Jgp/ue2opKy+PmYKYULXJOn
ZfHzMFMBXHaJy+Tw/TJRLBu5u3fJ4/MzUfEX++oOy+P9YKI2/nhSGEDzjz/L
O8BIlejGJmXI4/1hpNQL7M7XyeP9YaQ+cCs4DwGf8OQ25VHA+8VITbf2IRma
E67/ORipcNmnYmYKeP8YKU49+5PnEV5vBir1nsKBHJr/Pl4XA7WDl0fxNfAz
r++bxhDeDwbKoO0p1yoKPx8DdcWKpziX5tN/A5qBWu1TNtusiJ+PgdqQxhu2
XhnvPz3F118Vq6mM14ueYpH0vuEGPOGzKStBGd8fHdVX0Zb/TBnfDx3Vuiii
tB+4Vl/+BZcKvj86qvT6YMNeFXx/dFROV0qLBXDCJv2uMBUcP3RUuCvDwD0V
HD90lN/DwrE2YEd663kGVfx8dNQRDT62LTT/DS8bOkrncvVyQ2CFD95rTqvi
eKOjtglt3nBLFccbHSVo377tJfCygog9v2je9Dfg6Ci6KXmlNWo4XuioYWpI
ax9w14VUYwc1vL50VNMb/WOxwM9WMto/UsPxs4AKzYvcvqjh+FhA6bet/TjU
ieOG+UJ2quP4WECeAT7Xg9Rx/C+gPakK5cIaeH8WkFjfUK2WBl7/ebRq+81m
d2B2b4OPiRp4vefRdBnjt+fAA6z3hwc0cH2bRx37baa5NXG+zqP6qyuY5ICf
dNYssdLE6zWP8jb6rogATj65RahIE6/PPApYuCTFpIXzaQ4prTU8nK6F82EO
SdoyWdcDC9+97zymhevZHGJCKwOVtXG+z6Eqs4+3e7RxPM6i4szIe4t1iLMG
0WMpHRx/s+iCf9rrYB0cX7PIp8rwQy7wiaXMX97q4HiaRVrJtuMiujheZlEN
Ha+RJrCq5bOCk7o4PmbR88qTy64AU2ICTqXAT8Pq6jp1cTzMItmfXmLM+4lL
9m8I2bwfx8cM2nWv6ct+4HVV8o2+enj/Z1Cy2MC2VD1c72bQmvBrEZXAfHq/
1Dj1cXzMoNh7qRnSwJy8uoyH9XF8TKNIrxnzAGCOtttPM/RxfEyjC3Im/C+B
WVIYfYeBg+gLWngNcPxMIzorM2lZYP8qjlhz4Bmxh8PnDXA8TSPvcBvd/4DH
f3LnvjHA8TSNTulVLBoHHrnnbLvGkNiZl7+SMsTxNo1+eNWutwG2b/MMCAfu
lRP5lG+I43EKWaU0yr4H7qI/e30G2MxKfGKdEa7vU6ij6oORKvDBTaH3HIxw
/E6h9+FSnJeBjQa7nIqBG/WiXrYb4fieQrqFcpvojYnreftDRIE1vK/2aBnj
+J9CVW3KSq7AyvKjKfHAFSkpc4+McX2fQgoMOoe7gB9bTZewmBDLVGfxiZvg
/JlExZuMT+kDS0UwNHkCFwzelUgywfk1ibbpH71UAZxbyD7QC7yJr0R9sSnO
t0mU6W2duQNYpJ2LyRT4pnz5cT9TnI+TyP+8xud04CMNTWYNwDK8Rz7+NsX5
OYn4jn49LHiAeCzduU0VuPHHxIGTB3B+TqI8qXMtV4Ej/NhNyoHtX8S+7TuA
83USqS4WMFx+kFjEKLNRBpg+SULP4iDO3wn06UvJqzDgx1uUdAqBr7u/fNl+
ENf/CeT5yEiT6RCxpsx3yYgjOD/H0cZzbgVFwEy1MxIfgbs5z+cxH8X5OY7K
Dizdug1YynvnxjdHcT8dR8vLH2dMAg+yqooImeF8HEf1+1+naQBnXz0g5AYc
0tmVkmCG83EcWW10EHwOrHhyLGkAWPDBmTU8x4hn5lkS5I7h/BxHrarRK62B
iyNXXb0EHPs+jbf4GM7P38hFUDzuE7CuzX0uVnPiLXkKlyWA2carlx0wx/n7
G/XK60cGAD8/37Y4Gzi1wTK8Edif9+eiaXOcz7/RLykupqTjOF9/o8m2iMrn
wPMBrKEDwEwbA9W5LXC+/kbsDbOLZIHXW39b1maB8/M3EuOwaKS3JN5W0BGz
CVjK1NRI3xLn5xiSmWvk9QHWu/J4zUornI9jyER290cEfKSrINkW2CJU3DwK
2HZrltADK5yfY8ixWejLJ2A3n6R0Fmti77UrbLYB+1de3mhijfN1DAU7LP5+
BjhseWhOBnD0A3rHBuArR/22/rbG+TuGUrNd85VtiHN/2+yMA7YqfmQR4YD7
4S807inpXQB8cXf2pfcOuB/+QvyTa2/NAOeVxJescySmfJa8UgFulgn+cgLY
Znp6MsoR598omix1XXofWEDumMwCsNITbSsNJ+K3Z577ODvh/BxFtgp7o2KB
p+fz00uAI8o2ln4EFgxIfs3gTFxA8X7dCKxMHzGt7YzzexS9r2DgdAO2C/TZ
cBV4Rml472PgSEZbvS7gdS8+WrOcxPk/ilRUXkbrAZ+oKnmUADwbItFYBhyl
ltnbcxLn/yhazyYwu8iFuKgmdrkEsOpF9o1GwB80zsn5ADuyT+onA8/XOds+
d8H1YhQJax+JWeJKrN6g8cQUuO1SeZMfsJPu7r6brrhejCC6ZXlzVcAxr0W4
fwCLRCeKLXcjfqDHpbALWHP5RcPDwB2NC3YBbriejCB6w5+xdcCib9ue8rgT
l8Tpv5UB1jKu+W7mjuvPCPrEixaCgF3e3+fJBmZudyhvPIXrzwiaDHg6PgXc
L7p863oP4o56S0tND1yPRtArt+LrbsCFTw+zPAe+xk7vzu1JHJZvmC3rievT
CDpjktlpCewyO8kbAWyRpqVdBGyknhzYAaw2OFzC5EW8N27fkDiw+N74DcZe
uN4No+UhsjEZwOONn+d/A/d57ZQW9CZuFwhxUPXG9W4YvXreetMZuNx+S2s8
sNH18rBWH1zfhpEq4q6g8yWW+Wo9IQYsHl6yVd8X17NhJLiDw8oHmPFM/pta
4L4aY/nVp4nbnG+7KwE38MxknziN6x3t/kp1PscA3zNP5XsEHJ+rEsThR3x6
sn/oMLBzsrxosB+ed4aRuXL0kVxgg/7umLfAytHStbPAu3ZdWBA5Q7ypo01a
B5g/cKujB/BSsYC0G2fwvDSMfrlvWDYI3FpWd1rBn7jOWuCeDfATDpe+SOD8
gmeCD/zxvDSE0kx5jTuBU1vv2W8+S5xyUM/fA1hwdQpbInBy28+YcmCBRDmB
3rP4/WsIJR0Oz+IIII4/Rj+9+xzuB0Mo7nPy0iDg2ONywq+AudaH3/kFHNP9
YfeqQOLlt8SeKQTi+k17b7L00rYCvmj7Mzk6CNfTQXShL6ywHTjEXqxGNJiY
ebOXgTZwcH9lhysw4388tleBAx0sRx4H43o4iM46Ja82PE/sd/LDvu/AMxJi
r5aG4Pr0E/kOex6QAp7Or+w+COzjyuN0Fth7tOBcHbCn+/543lBiF6/KPsUL
uD79RCvjmYttgMuLVILCge2az+vlX8D14SdaNlop8A7YTEK1RPAicZ5jlYEd
8MDx6seRYTjff6C9KWqmrcBhHdUjQuHEkjOsZarAH1apRziE43z9gQL2XDgY
DSxmWiN6H9g7Tr1iHri6seawegSx8zDbJidgvmUa45eBn269+LwY2Ea7Nro9
AufbD8RcXVvpfIk4XbFumj6SWNucvUYUeMxf84pWJH4/GUBJN8IsXID3Pa6T
uAIcM6VZ9wm4e9dLK7Eo4jBjDkkdYMlTWguuwG0x4fXxwOcKXl5/FIW/fw2g
N4NaUszRxOvE61/pAp+017a/Bvw0s56xG9imcnEjy2XipT3ayVuAixkuOehd
xvPhADoq1LDHA9hvh/wITwxxguKd7CLgNJXaqx0xeJ7rR9kaX88zxRLn69Cf
Egcu0RewMAKuOWiskA7ccvzS6jHgT9bZbPxxxL32leP7gAedunoc4vD3lX40
7jrXFAvM7Ct99wswT6BT+M4rxMJhGbZBwJIxH/c1A++Nn9oxA6yUwLtOOB7P
W/1IM3nHUi1g/TSdWTdgFeFXZS6JeD74juJvbKthTiLuWxH1JgHYb1cWVznw
cuMyo6/Ame4t8ew3cP/uQ3tjhlolgC1frz3qCxyxWK/rBfB9jQDrZcnEn0Ly
vx8Edsuo2XIWmOXFZ6d04ITuybu1wBL0y0cHk3G/70MBp12ng1KIm343MqxK
JZ6RZAi1BBZxkeTIAy6J1NRpTsX9uQ9p37GImgT+/NK3UeAmsUd/DPc+4Cqr
X2tagVd2Goo4pRHnzjnYxAAr8gfffgD8fm9Sf0ca7q996MTBInGGW8Qx8T35
2sCPmnmkrwL3cKo87AJerOshL55OnOp46aw+sHR4RoUncF32E8YkYLOadyoV
6bgff0MSrRmNFhnEdH0eR5kyib8PHRU2Bm6aUPmeAVw1I6P9KhP372+odGHr
3XHgPMb1XGuziG+x8nmoAfepmqQ3ZON+/Q25V75naMvD/bMXZWlL+D0vwf3k
K9Kr5fTsA55WGT255CFx+rNme0lgXXTf0vQh7ic96OYeb9ObwGM7ZLUGgBNE
KiTPlhJTK9RWcz8i/tBlVmLxBPeHHiTeLpSbCxzwtidlHHizftX1NU+Jmxuy
YilgP82Ll6yBRatPhIY9xf2jB9U/HHYWLCN2y/U0uQfM4RU5Rv8M1/svaMdC
0LE0YNNQnzql58QntMYWYoDPLDsp/QU4xFVcj+MFcXTz9xM7X+D6/gUlSGed
Pwx866pVahBw7dpDHCKVxENZ+z1fADM41v3HU0XMu12lywpYMIZhNgJYbKyM
7z6wpMmZHR+BZUv2ajNX4/7xBYXWbFivWkPc3Mo5GVJL3LH3Fddd4N6k8K0t
wMPz6uoLtbgfdKMpcxbLjXXEizecu+YFvPb7TEM1sIrryB67l8QOU7232OqJ
ZwRVDaze4ffXLhSalLz7Qieuf58Rw42H5zZ+Jva78fZlFXDi0cPJg8ClAt0u
fF3ErR/t9ikAT9wY4rXpwvXwM5ISnCu9D+yWzG7O3E1sm0KN7ftCfCTV80Jg
D/Fp87lDOcAJ64K3NgGXfGanmwZuSb3cJPQV18PPiEcoxcsV2OBmLn8FcP3N
ahvzXmK1tO78BeBnaXPTyd+I5W6tVFHoIz5smbLCBthXWLT/EvC1L7mP7wM/
uLUz6mMfro+f0ZiwotTW78SS6bof/IAjfayXZPYTf9f1U3w9QEwxBUau+kEc
/zC03RJYKY6d4SLwT+dLYnnA1zQ49zf/wPWxEymLxHpMAo9GJi+79JM4dSo7
W2iQeMl+Zt+qUfx+8wn16N/Xb53F8/xH9GPCQQyxDP2vfnQgbjHfR57Lhv4X
n21IOv/cec9VQ//73vEBXWiP0n25fuh/69WKWsyu6vaJD/2vXregYEqYRXQb
seT6u08sJYiTV8dsKQRexO1xnWE7sUKUjd5m4FMcB1gNgHNCNZ76AH9mlPW4
SfO//vAePRij06d2EEd+rRLvBJarNujh30ncf/tT4iEp4orr6V5TwNfCThhe
kyZmDNKp+AbsfHq7xO5dxOkTQr1mNP97v3qH2ty5b4QAcw4zGeUBqziOs78H
dmx9/VBUhjhOOdvOS5Z4lVuwfwVwcsqxOA45YvNdOinbgYUb9uYY0/yv/71D
vZZi932Bb0/zlqcA3zOuH9gpT/w4P3BFDfAbmyHnYQXiL/xHqlZSxI5LAj0e
Ao/PZYkcUiSWHd/rlwMcMNjQPA2cduLqwnol4spe8y1aNP/rh29Rn8VmU3dg
9s5fgYnAAuWoq2Mf8fab4UhQhXhfYMuNY6rEJpbCs6lqxImHiw1HgD8bavyn
qE7M8IarxR54g3YHQwzN/8KxGanXZGwrBT6hfPJQN/CY1JVFQRrEZzY8KhHW
JB5v+1a8X4vYJZrn/mltYvGBzUXLdYi/qygWZgGru9ffGwXOTDW9J69LbLxb
QNISmOlVd8EF4EKr2zvygC1mnAqaaf7XD5uRkU31nS36xGqN63KCDIkz02eL
+IyImbxby7KBOxyjAl8BFx1XVfkFHGEyx7rSmNhSq6hOjuZ/38ebEJf0er0Q
4GeC0e9eA5+tVBv4bUIs57hAx3+AeIrrAZ/SQeLih87idoeIeS5p7p4BdjcX
VYo8TKxp/JGpkOZ//boRrdeMq24BnlbQCpsFbtrJoCN0hPicgEvTCeDtrJ9M
i4CzczguSx4D59eVqcs/TnxIrP5OK/BlhmOX6SyIazpGTokB0z0IPqBH87/3
u0bk4pCzNhW4c+2b3iHgpxfWeERZEieN2DBKWBEfeD631tmamPdKnNwdG2JR
uzerlWyJ98gunnoPXC6y2U7IjlhjqXqLA/BSxpall4GbJqxVi4Hjf4ydaQc+
1BV0n85+6H/zxRt0JnTGdfMJ4tSt7tuMHIifN/f3n3Ek7vWxyMpyIp7QTj4v
50zMtq7NshH48qLJpjUniVf/4lWyAf70Ld0nHDitY2dBPrBN47O+dzT/6+9v
0JYq/XUzwC52C5kBbsRF7He2sngQq7gfiMoCft/OOKLuSTx931nDFVgw+sPN
68BKJ5SnK2j+Nw+8QrbKdw36gfMngxllvYgncw8VhQOv9i/weuVNLLefTXa5
L/GLMZSscJpYO8GL3tGPOC9I5dADYE4n7kKGM8QVx32PiQG7mXRx6AILa6mX
uAO/RXetrtP8b55pQNe4tPi2+xMf/dpbXQXsvN0kUugcsf/pSiO/IOIdQp47
q4B7qkS5OIOJn646Sy8NfNWxZfggsEuZxGf/YDxP1SNNrguvbwHnH/0esfs8
MV+2puZL4G60pHI0hDjv/Wu0+gKxr1NMqeJFYlUmY2n7MOKpbGaeQuDc/cWj
s8AhaUu7hcKJj/22aVQF3qNeVu4Qjue/OsSVuCI/Gti719tJJIK4c0fb5hJg
z/sC22SiiJfKHN9ReplY3fWKYjfwuexaffYY4tKuueOSwGOrJN0OxeD5sxbZ
hiXE5AC3TTMUTgOXtzf/SoglznicLiUbR+zir1p8+gqxHNW3+3E8sfP7Ewe/
XSVOcfzpy3Wd2KZMoHP3dTz/1iBxLt19R4FHrfyzAoFLHuRx3AZWPrrs7Sjw
GwaXJPkE4u86O7Y2AzNcH31il0gsJeHRGZtEbFM5QVd2g/gs58PLRsnE1w77
ru8HFqFv75dKIc7PlC08C+w55bAiA1hOO+l0HTBDSn3nEHDtyOw+3lQ8j1cj
8VPlcTfSiCPHg75uyCAWbSmaqgYue/B1yYlM4t6hkZgY4MVi8yseZeJ5thJJ
mrPf+AJ84Brf+sVZxOlsEuJHgYe91XblAQvtzTYbvU1sMMMeuiuHuPrORNWp
/4jlzHtYCnOJw8a7XrUBf4jojGe4Qywm/NFs8x08H75Ang/bRA2AeXrfFd8E
LuBqVB0B/uFQbROdRyxa+SRE4i5xoldOlVM+Mefmqyy5BcSaQZdEte4Rn+8I
Uu0Hfut2bilXIfH6RWffywC7pvglHwcul/a1uViI57Hn6KiFx3gr8HSkS4hY
EXF+EoeqbzGxTU4mc30JscDiBHm+h8RvnS55mAPfFQy9fB447HXAnZyHeJ6p
QDYBvrWvgRV3nPo6Bpw3dsj4Yikxf4lipcAj4gmFZRmqj4mbKjuCTz4hLhPc
6c35lDjX66JDAbBwutRX+jLihDedZgbA72zuJ/qW4X5fjjjnwlrTgLVjzXlf
Aodu2mXwC9iivXuPdAWx3KWotV7PiDONlEr9q3H/e4pyQvIGu9/g+vQQOT4r
lfdsJN42XxWxqIl4Gb+OlCHwsExzexJwl3r83QrgJtODQb3Az2z4TTmaiQs9
Ojdvb8b5+gDt+TlRY/KW+LEVp+2Zd8T+qfzFnO+JqQ4x5nTg7QMDrTXAQtN5
uT+BuRa5BXC1EDOslDba3YLjtQh9kX40EwD8wlDxVh2w+suDiiOtxA1Kbp0r
2ogFdy9/i4Cdt+TX2AI/Xbv/SRTwUp7BggdteP8L0N3ZLYms7cR6X+2DTYFj
ir+aTAC/DT2+6WoHcUe9njtfJ97fPPTDRIKVtwdfLx3VWtft3wucecr62rEe
/PtkFBxE1xUMfDwmcVMOMH9+Y+kY8PsGVm30lbhc+XO0fS8+fxy6YXj6Q+T/
Oxj5WvCtLwI+4Fpw4gOwdIB24Xwvnjfp6Liivs0IfyMevhGorAGc86jkXSxw
aJ2h4ENgqw+DNp+A106ITIr1EcdJXl79FNhVUdzyC7CuXvV/bN+JFznPyRkC
+2fbH+sDtlunlM41QCy39NdW25/E5tw36qOBg1aqOZQC161PvL1kkNh09z7h
ImA389iV9MPEt+/tZEwcJa5/8PHmC+Chx6HUIPCu6vYzir+In7cHTX4D/sT0
9qfUb2J6dv8IM2CRZWJbLgA7rPKzawee3Cry5dw4Mf/OV+f+A0Z7vNe9Aw5R
qj8qNkGcreY5qw9cr70u8TTwsH6dTAYwt+mp1lfA/weJ0rU7
                "]]}, {
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               Line[CompressedData["
1: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
                "]]}}}, {}}, {{{{}, {}, {
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
CIN5o0Ksr4iBh46raNRIghu1q8Tk5MD/Az/8tMk=
                "]]}, {
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}]], 
               Line[CompressedData["
1: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
GSnwl+VVUsrK4P8BBhmArg==
                "]]}}}, {}}, 
           Line[{{
              Rational[16, 17], 0}, {
              Rational[16, 17], 4}}]}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
           DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
           Axes -> {True, True}, AxesLabel -> {"p", "Max Time (yrs)"}, 
           AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
             AbsolutePointSize[6], "ScalingFunctions" -> None}, 
           PlotRange -> {{0., 0.999}, {0., 3.26}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           LineLegend[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}]]}, {"Measles", "Pertussis"}, 
            LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> 
            "Column"]], {0.25, 0.75}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {570, -152.90421193686507`}, {
     Center, Center}, {360, 291.2461179749811}]}, {}},
  AspectRatio->Automatic,
  ContentSelectable->True,
  ImageSize->600,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.7589937271224327`*^9, 3.7589937552461443`*^9}, 
   3.7637460107863407`*^9, 3.767639111249813*^9, 3.7676392477079*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<AmpEnvelopeRow.pdf\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.73963878979936*^9, 3.739638806760978*^9}}],

Cell[BoxData["\<\"AmpEnvelopeRow.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.739638808440483*^9, 3.7589887569431505`*^9, 3.7589896076320543`*^9, {
   3.758993745330701*^9, 3.7589937606456738`*^9}, 3.7637460128282228`*^9, 
   3.7676391137974787`*^9, 3.7676392557847013`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1264, 637},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 166, 2, 49, "Subsection"],
Cell[749, 26, 180, 4, 31, "Input"],
Cell[932, 32, 950, 28, 31, "Input"],
Cell[1885, 62, 1000, 29, 31, "Input"],
Cell[2888, 93, 825, 27, 31, "Input"],
Cell[3716, 122, 827, 27, 31, "Input"],
Cell[CellGroupData[{
Cell[4568, 153, 2551, 66, 92, "Input"],
Cell[7122, 221, 20294, 406, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27453, 632, 183, 3, 31, "Input"],
Cell[27639, 637, 199, 3, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27887, 646, 229, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[28141, 653, 1644, 40, 31, "Input"],
Cell[29788, 695, 562, 13, 31, "Output"]
}, Open  ]],
Cell[30365, 711, 2089, 53, 52, "Input"],
Cell[32457, 766, 2025, 52, 72, "Input"],
Cell[34485, 820, 1749, 47, 72, "Input"],
Cell[36237, 869, 1745, 48, 72, "Input"],
Cell[37985, 919, 1745, 48, 72, "Input"],
Cell[39733, 969, 2582, 63, 92, "Input"],
Cell[42318, 1034, 2582, 63, 92, "Input"],
Cell[44903, 1099, 2634, 63, 92, "Input"],
Cell[47540, 1164, 2634, 63, 92, "Input"],
Cell[CellGroupData[{
Cell[50199, 1231, 3396, 76, 92, "Input"],
Cell[53598, 1309, 85574, 1487, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139209, 2801, 233, 4, 31, "Input"],
Cell[139445, 2807, 271, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139753, 2816, 4007, 89, 92, "Input"],
Cell[143763, 2907, 17233, 296, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161033, 3208, 282, 5, 31, "Input"],
Cell[161318, 3215, 191, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161546, 3222, 881, 15, 31, "Input"],
Cell[162430, 3239, 103379, 1780, 272, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265846, 5024, 172, 3, 31, "Input"],
Cell[266021, 5029, 274, 4, 31, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

